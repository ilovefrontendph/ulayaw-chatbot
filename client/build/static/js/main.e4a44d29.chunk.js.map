{"version":3,"sources":["Context/ThoughtDiaryContext.js","Context/GetAdverseAnswerContext.js","Context/ShowMoodsContext.js","Context/GetHotEmotionCAnswerContext.js","Context/GetOtherEmotionCAnswerContext.js","Context/ShowChatBox.js","Context/ThoughtDiaryFocusContext.js","Context/MaxInputContext.js","Context/GetOtherEmotionAllContext.js","Context/HotEmotionRateContext.js","Context/GetHotThoughtBContext.js","Context/GetOtherThoughtBContext.js","Context/ShowUTSContext.js","Context/GetUTSContext.js","Context/GetUTSContainerContext.js","Context/HotThoughtRateContext.js","Context/GetForEvidenceDContext.js","Context/GetAgainstEvidenceDContext.js","Context/GetLocationContext.js","components/Header.js","helpers/auth.js","components/ModalLogin.js","components/Footer.js","components/pages/Landing.js","components/chatbot/Message.js","components/chatbot/Card.js","components/chatbot/QuickReply.js","components/chatbot/QuickReplies.js","components/chatbot/Choice.js","components/chatbot/Instance.js","components/chatbot/MultipleChoice.js","components/chatbot/GetMoods/Mood.js","components/chatbot/GetMoods/GetMoods.js","hooks/useGeolocation.js","components/chatbot/Map.js","components/chatbot/MapContainer.js","components/chatbot/UTSCard.js","components/UTS.js","components/chatbot/Chatbot.js","components/App.js","registerServiceWorker.js","index.js"],"names":["ThoughtDiaryContext","createContext","GetAdverseAnswerContext","getAdverseStep3","setGetAdverseStep3","answer","ShowMoodsContext","GetHotEmotionCAnswerContext","GetOtherEmotionCAnswerContext","ShowChatBox","ThoughtDiaryFocusContext","MaxInputContext","GetOtherEmotionAllContext","HotEmotionRateContext","GetHotThoughtBContext","GetOtherThoughtBContext","ShowUTSContext","GetUTSContext","GetUTSContainerContext","HotThoughtRateContext","GetForEvidenceDContext","GetAgainstEvidenceDContext","GetLocationContext","Header","className","src","to","isAuth","window","key","cookie","get","getCookie","localStorage","getItem","JSON","parse","ModalLogin","props","loc","useState","showRegister","setShowRegister","selectedGender","setSelectedGender","location","first_name","last_name","age","gender","contact_no","email","password1","password2","textChange","formData","setFormData","handleChange","text","val","e","console","log","target","value","a","preventDefault","axios","post","password","res","toast","success","data","message","error","errors","onClick","setShowModal","showModal","setQuickRepliesWelcome","type","placeholder","onChange","name","country","international","withCountryCallingCode","phone","handleSubmit","clientId","process","buttonText","render","renderProps","disabled","onSuccess","response","onFailure","cookiePolicy","Footer","Landing","useContext","showThoughtDiaryTool","setShowThoughtDiaryTool","showMoods","setShowMoods","MessageFormat","speaks","float","Message","Card","style","height","width","alt","payload","fields","header","stringValue","backgroundImage","image","description","rel","href","link","QuickReply","setShowChatBox","showChatBox","reply","structValue","margin","event","click","showDiary","showUTS","QuickReplies","quickReplies","showQuickReply","setShowQuickReply","_handleClick","replyClick","map","i","renderQuickReply","Choice","choices","question_no","question_text","score","Instance","instance","nextBtn","setNextBtn","prevBtn","setPrevBtn","doneBtn","setDoneBtn","useEffect","item","question_num","numberValue","currentInstance","instanceLength","question","listValue","values","selectedChoices","setSelectedChoices","renderChoiceInstance","setCurrentInstance","_handleDoneClick","MultipleChoice","total","length","parseInt","choice_score","_handleAssessmentResult","choice_text","index","findIndex","x","prevSelectedChoices","addMoreItem","id","newChoice_text","newChoice_score","g","updateItem","setAssessmentScore","assessmentScore","renderInstance","Mood","mood","maxInput","setMaxInput","setGetOtherEmotionCAnswer","getOtherEmotionCAnswer","getOtherEmotionAll","setGetOtherEmotionAll","select","mood_text","check","checked","otherEmotion","count","ys","selectedMoods","d","push","setSelectedMoods","m","prevChats","splice","alert","GetMoods","moods","moodsNumber","setMoodsNumber","setChecked","pagesVisited","pageCount","Math","ceil","setGetHotEmotionCAnswer","getHotEmotionCAnswer","_changePage","selected","prevSelectedMoods","addMoreMood","removeMood","showAtEntrance","slice","dontShowChatBox","renderMood","previousLabel","nextLabel","previous","onPageChange","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","hotEmotion","_handleMoodResult","useGeoLocation","Cookies","loaded","coordinates","lat","lng","setLocation","setGetLocation","getLocation","position","coords","latitude","longitude","onError","code","navigator","geolocation","getCurrentPosition","mapStyles","CurrentLocation","state","currentLocation","prevProps","prevState","google","this","loadMap","recenterMap","map1","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","pos","setState","mapRef","refs","node","ReactDOM","findDOMNode","zoom","mapConfig","Object","assign","Map","children","React","Children","c","cloneElement","mapCenter","ref","renderChildren","Component","defaultProps","visible","MapContainer","showingInfoWindow","activeMarker","selectedPlace","places","onMapReady","mapProps","searchNearby","service","PlacesService","request","radius","nearbySearch","results","status","PlacesServiceStatus","OK","onMarkerClick","marker","onClose","initialCenter","onReady","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","p","onMouseover","onMouseout","geometry","renderType","GoogleApiWrapper","apiKey","UTSCard","UTS","isHovering","setIsHovering","title","setTitle","setDescription","disputationTitle","setDisputationTitle","disputationQ","setDisputationQ","getUTS","setGetUTS","onMouseEnter","onMouseLeave","UTSData","Types","Description","DisputationQ","getUTSBool","_handleUTSClick","UTS_Description","cookies","ModalTermsAndConditions","set","path","ThoughtDiary","focusThoughtDiaryLetter","setFocusThoughtDiaryLetter","getHotEmotionRate","setGetHotEmotionRate","getOtherThoughtB","setGetOtherThoughtB","getHotThoughtRate","setGetHotThoughtRate","getHotThoughtB","setGetHotThoughtB","getUTSContainer","setGetUTSCointainer","getForEvidenceD","setGetForEvidenceD","getAgainstEvidenceD","setGetAgainstEvidenceD","firstHit","_handleMoodResultGetHotEmotionCAnswer","setBasket","thought","setThought","useDrop","accept","drop","basket","includes","collect","monitor","isOver","_handleMoodResultGetOtherEmotionAll","undefined","withRouter","returnedMessages","messages","setMessages","showBot","setShowBot","shopWelcomeSent","setShopWelcomeSent","showModalLogin","setShowModalLogin","claimCode","setClaimCode","correctCode","setCorrectCode","quickRepliesWelcome","getMoodStep1","setGetMoodStep1","getMoodWhenStartedStep1","setGetMoodWhenStartedStep1","activateGetAdverseStep3","setActivateGetAdverseStep3","getAdverseStep3UseState","setGetAdverseStep3UseState","getMoodHot","setGetMoodHot","getMoodOther","setGetMoodOther","getAfterFeelings","setGetAfterFeelings","getAfterFeelingsChat","setGetAfterFeelingsChat","showMoodsHot","setShowMoodsHot","showMoodsOther","setShowMoodsOther","getRateEmotion","setGetRateEmotion","getOtherThoughtBool","setGetOtherThoughtBool","setShowUTS","setGetUTSBool","getUTSThoughtBool","setGetUTSThoughtBool","setGetUTSState","getUTSContainerState","setGetUTSCointainerState","getRateThought","setGetRateThought","getHotThoughtBool","setGetHotThoughtBool","getExplainDBool","setGetExplainDBool","messagesEnd","useRef","talkInput","df_text_query","queryText","dfQuery","speaker","extra","says","msg","prevMessages","userID","fulfillmentMessages","df_event_query","eventName","_handleQuickReplyPayload","stopPropagation","_handleShowList","_handleMoods","_handleHotMoodResult","_handleOtherMoodResult","renderOneMessageStatic","renderOneMessage","cards","overflow","card","quick_replies","quick_replies_welcome","show_diary","multiple_choice","get_mood","mood_assess","mood_assess_text","agree_a","get_mood_hot","get_mood_other","rate_emotion","show_uts","select_UTS_thought","_handleUTSQuickReply","select_HOT_thought","_handleHotThoughtQuickReply","explain_d","_handleExplainDQuickReply","explain_d_get_for_1","explain_d_get_against_1","explain_d_get_d_q","moodContainer","listContainer","UTSformat","prev","resolveAfterXSeconds","Promise","resolve","setTimeout","uuid","history","listen","pathname","focus","scrollIntoView","behavior","el","onKeyPress","input","claim_code","chat","NaN","App","DndProvider","backend","HTML5Backend","Provider","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e4a44d29.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const ThoughtDiaryContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetAdverseAnswerContext = createContext({\r\n  getAdverseStep3: \"\",\r\n  setGetAdverseStep3: (answer) => {},\r\n});\r\n","import { createContext } from \"react\";\r\n\r\nexport const ShowMoodsContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetHotEmotionCAnswerContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetOtherEmotionCAnswerContext = createContext(0);\r\n","import { createContext } from \"react\";\r\n\r\nexport const ShowChatBox = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const ThoughtDiaryFocusContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const MaxInputContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetOtherEmotionAllContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const HotEmotionRateContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetHotThoughtBContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetOtherThoughtBContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const ShowUTSContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetUTSContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetUTSContainerContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const HotThoughtRateContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetForEvidenceDContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetAgainstEvidenceDContext = createContext(null);\r\n","import { createContext } from \"react\";\r\n\r\nexport const GetLocationContext = createContext(null);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => (\r\n  <nav className=\"bg-[#5dcfff] flex justify-center p-4 md:p-10 h-[122px] \">\r\n    <span className=\" self-center mr-[4%] rounded-full bg-white inline-block\">\r\n      <img className=\" w-20 \" src=\"ulayaw.png\" />\r\n    </span>\r\n    <span className=\"text-white self-center text-xl md:text-[39px] 2xl:text-[50px] w-40 \">\r\n      <Link to={\"/\"}>Ulayaw</Link>\r\n    </span>\r\n    <ul className=\"flex self-center space-x-5 justify-end w-full\">\r\n      <li className=\"text-white self-center text-sm md:text-xl 2xl:text-[30px]  \">\r\n        <Link to={\"/shop\"}>Solution</Link>\r\n      </li>\r\n      <li className=\"text-white self-center text-sm md:text-xl 2xl:text-[30px]  \">\r\n        <Link to={\"/shop\"}>Resources</Link>\r\n      </li>\r\n      <li className=\"text-white self-center text-sm md:text-xl 2xl:text-[30px]  \">\r\n        <Link to={\"/shop\"}>The Team</Link>\r\n      </li>\r\n      <li className=\"text-white self-center text-sm md:text-xl 2xl:text-[30px]  \">\r\n        <Link to={\"/shop\"}>Feedback</Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Header;\r\n","import cookie from \"js-cookie\";\r\nimport { GoogleLogout } from \"react-google-login\";\r\n\r\n// Set in Cookie\r\nexport const setCookie = (key, value) => {\r\n  if (window !== \"undefiend\") {\r\n    cookie.set(key, value, {\r\n      // 1 Day\r\n      expires: 1,\r\n    });\r\n  }\r\n};\r\n// remove from cookie\r\nexport const removeCookie = (key) => {\r\n  if (window !== \"undefined\") {\r\n    cookie.remove(key, {\r\n      expires: 1,\r\n    });\r\n  }\r\n};\r\n\r\n// Get from cookie such as stored token\r\n// Will be useful when we need to make request to server with token\r\nexport const getCookie = (key) => {\r\n  if (window !== \"undefined\") {\r\n    return cookie.get(key);\r\n  }\r\n};\r\n\r\n// Set in localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n  if (window !== \"undefined\") {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }\r\n};\r\n\r\n// Remove from localstorage\r\nexport const removeLocalStorage = (key) => {\r\n  if (window !== \"undefined\") {\r\n    localStorage.removeItem(key);\r\n  }\r\n};\r\n\r\n// Auth enticate user by passing data to cookie and localstorage during signin\r\nexport const authenticate = (response, next) => {\r\n  console.log(\"AUTHENTICATE HELPER ON SIGNIN RESPONSE\", response);\r\n  setCookie(\"token\", response.data.token);\r\n  setLocalStorage(\"user\", response.data.user);\r\n  next();\r\n};\r\n\r\n// Access user info from localstorage\r\nexport const isAuth = () => {\r\n  if (window !== \"undefined\") {\r\n    const cookieChecked = getCookie(\"token\");\r\n    if (cookieChecked) {\r\n      if (localStorage.getItem(\"user\")) {\r\n        return JSON.parse(localStorage.getItem(\"user\"));\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const signout = (next) => {\r\n  removeCookie(\"token\");\r\n  removeLocalStorage(\"user\");\r\n  next();\r\n};\r\n\r\nexport const updateUser = (response, next) => {\r\n  console.log(\"UPDATE USER IN LOCALSTORAGE HELPERS\", response);\r\n  if (typeof window !== \"undefined\") {\r\n    let auth = JSON.parse(localStorage.getItem(\"user\"));\r\n    auth = response.data;\r\n    localStorage.setItem(\"user\", JSON.stringify(auth));\r\n  }\r\n  next();\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport { FaGoogle } from \"react-icons/fa\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { authenticate, isAuth } from \"../helpers/auth\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport asdfjkl from \"asdfjkl\";\r\n// import \"react-phone-number-input/style.css\";\r\nimport PhoneInput from \"react-phone-number-input/input\";\r\n\r\nexport default function ModalLogin(props) {\r\n  const [showRegister, setShowRegister] = useState(false);\r\n  const [selectedGender, setSelectedGender] = useState(false);\r\n  const [value, setValue] = useState();\r\n  let loc;\r\n  if (props.location) {\r\n    loc = props.location;\r\n  } else {\r\n    loc = \"admin_loc\";\r\n  }\r\n  const [formData, setFormData] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    age: \"\",\r\n    gender: \"male\",\r\n    contact_no: \"\",\r\n    location: loc,\r\n    email: \"\",\r\n    password1: \"\",\r\n    password2: \"\",\r\n    textChange: \"Sign Up\",\r\n  });\r\n  // if (showRegister) {\r\n  //   setFormData((prevFormData) => {\r\n  //     return { ...prevFormData, location: props.location };\r\n  //   });\r\n  // }\r\n\r\n  const {\r\n    first_name,\r\n    last_name,\r\n    age,\r\n    gender,\r\n    contact_no,\r\n    location,\r\n    email,\r\n    password1,\r\n    password2,\r\n  } = formData;\r\n\r\n  const handleChange = (text, val) => (e) => {\r\n    console.log(\r\n      first_name,\r\n      last_name,\r\n      age,\r\n      gender,\r\n      contact_no,\r\n      location,\r\n      email\r\n    );\r\n    if (val) {\r\n      setFormData({ ...formData, [text]: val });\r\n    } else {\r\n      setFormData({ ...formData, [text]: e.target.value });\r\n    }\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (\r\n      first_name &&\r\n      last_name &&\r\n      age &&\r\n      gender &&\r\n      contact_no &&\r\n      location &&\r\n      email &&\r\n      password1\r\n    ) {\r\n      // console.log(\"success here\", formData);\r\n\r\n      if (password1 === password2) {\r\n        console.log(\"success here\");\r\n        setFormData({ ...formData, textChange: \"Submitting\" });\r\n        const res = await axios.post(`/api/register`, {\r\n          first_name,\r\n          last_name,\r\n          age,\r\n          gender,\r\n          contact_no,\r\n          location,\r\n          email,\r\n          password: password1,\r\n        });\r\n        if (res) toast.success(res.data.message);\r\n        else {\r\n          setFormData({\r\n            ...formData,\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            contact_no: \"\",\r\n            location: \"\",\r\n            age: \"\",\r\n            gender: \"\",\r\n            email: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            textChange: \"Sign Up\",\r\n          });\r\n          // console.log(err.response);\r\n          toast.error(res.data.errors);\r\n        }\r\n        // .then((res) => {\r\n        //   // setFormData({\r\n        //   //   ...formData,\r\n        //   //   first_name: \"\",\r\n        //   //   last_name: \"\",\r\n        //   //   age: \"\",\r\n        //   //   gender: \"\",\r\n        //   //   contact_no: \"\",\r\n        //   //   location: \"\",\r\n        //   //   email: \"\",\r\n        //   //   password1: \"\",\r\n        //   //   password2: \"\",\r\n        //   //   textChange: \"Submitted\",\r\n        //   // });\r\n\r\n        //   toast.success(res.data.message);\r\n        // })\r\n        // .catch((err) => {\r\n        //   setFormData({\r\n        //     ...formData,\r\n        //     first_name: \"\",\r\n        //     last_name: \"\",\r\n        //     contact_no: \"\",\r\n        //     location: \"\",\r\n        //     age: \"\",\r\n        //     gender: \"\",\r\n        //     email: \"\",\r\n        //     password1: \"\",\r\n        //     password2: \"\",\r\n        //     textChange: \"Sign Up\",\r\n        //   });\r\n        //   console.log(err.response);\r\n        //   toast.error(err.response.data.errors);\r\n        // });\r\n        console.log(formData);\r\n      } else {\r\n        toast.error(\"Password do not match\");\r\n      }\r\n    } else {\r\n      toast.error(\"Please fill all fields\");\r\n    }\r\n  }\r\n\r\n  const responseSuccessGoogle = (response) => {\r\n    console.log(response);\r\n  };\r\n\r\n  const responseErrorGoogle = (response) => {\r\n    console.log(response);\r\n  };\r\n  return (\r\n    <>\r\n      {isAuth() ? <Redirect to=\"/\" /> : null}\r\n      <div className=\"left-0 fixed top-0 w-full h-full bg-black bg-opacity-[0.75] \">\r\n        <ToastContainer />\r\n        <div className=\"h-full flex flex-col  justify-center align-center\">\r\n          {/* header */}\r\n          <div className=\"w-[600px] rounded-t-[10px] text-[25px] lg:text-[35px] p-[18px] lg:p-[28px]  text-white self-center bg-[#5DCFFF] font-semibold text-center relative\">\r\n            <button\r\n              className=\" text-white px-[13px] py-[8px] absolute top-4  right-4 lg:w-[70px] w-[60px] rounded-[5px] bg-[#2E93BE] text-[14px]\"\r\n              onClick={() => {\r\n                props.setShowModal(!props.showModal);\r\n\r\n                if (props.setQuickRepliesWelcome) {\r\n                  props.setQuickRepliesWelcome(true);\r\n                }\r\n              }}\r\n            >\r\n              Close\r\n            </button>\r\n\r\n            {props.setQuickRepliesWelcome ? (\r\n              <>\r\n                <p>Ulayaw Client {!showRegister ? \"Login\" : \"Register\"}</p>\r\n                <p className=\"text-[14px] text-gray-100\">\r\n                  {showRegister\r\n                    ? \"Mag register ka na ka ulayaw!\"\r\n                    : \"Mag login ka na ka ulayaw!\"}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <p>Ulayaw Exclusive {!showRegister ? \"Login\" : \"Register\"}</p>\r\n                <p className=\"text-[14px] text-gray-100\">\r\n                  Accessible for Volunteers, Staffs, and Admin Only\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          {/* body */}\r\n          <div className=\"w-[600px] rounded-b-[10px] text-[12px] lg:text-[16px] p-[18px] px-[71px] py-[55px] self-center bg-white justify-center flex flex-col \">\r\n            {/* inputs */}\r\n            <span>\r\n              {showRegister ? (\r\n                <>\r\n                  <span className=\"grid grid-cols-2\">\r\n                    {/* first name */}\r\n                    <label className=\"space-x-[10px]  text-gray-600 inline-block p-4  rounded-lg  select-none w-full \">\r\n                      <input\r\n                        className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-[15px]  bg-[#F2F3F7]\"\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        onChange={handleChange(\"first_name\")}\r\n                        value={first_name}\r\n                      />\r\n                    </label>\r\n                    {/* last name */}\r\n                    <label className=\"space-x-[10px]  text-gray-600 inline-block p-4  rounded-lg  select-none w-full \">\r\n                      <input\r\n                        className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-[15px]  bg-[#F2F3F7]\"\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        onChange={handleChange(\"last_name\")}\r\n                        value={last_name}\r\n                      />\r\n                    </label>\r\n                  </span>\r\n                  <span className=\"grid grid-cols-2\">\r\n                    {/* age */}\r\n                    <label className=\"space-x-[10px]  text-gray-600 inline-block p-4  rounded-lg  select-none w-full \">\r\n                      <input\r\n                        className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-[15px]  bg-[#F2F3F7]\"\r\n                        type=\"number\"\r\n                        placeholder=\"Age\"\r\n                        onChange={handleChange(\"age\")}\r\n                        value={age}\r\n                      />\r\n                    </label>\r\n                    {/* gender */}\r\n                    <span className=\"grid grid-cols-2 space-x-2 px-4 text-center\">\r\n                      {/* male */}\r\n                      <span className=\"flex items-center \">\r\n                        <label\r\n                          className={\r\n                            \"space-x-[10px]  text-gray-600 inline-block p-4  rounded-lg  select-none w-full hover:border-2 cursor-pointer \" +\r\n                            `${!selectedGender ? \"border-2\" : \" \"}`\r\n                          }\r\n                        >\r\n                          <input\r\n                            className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-[15px]  bg-[#F2F3F7] hidden\"\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            onChange={handleChange(\"gender\", \"male\")}\r\n                            onClick={() => {\r\n                              setSelectedGender(false);\r\n\r\n                              // setGender(\"male\");\r\n                            }}\r\n                            value={gender}\r\n                          />\r\n                          Male\r\n                        </label>\r\n                      </span>\r\n                      {/* female */}\r\n                      <span className=\"flex items-center\">\r\n                        <label\r\n                          className={\r\n                            \"space-x-[10px]  text-gray-600 inline-block p-4  rounded-lg  select-none w-full hover:border-2 cursor-pointer \" +\r\n                            `${selectedGender ? \"border-2\" : \" \"}`\r\n                          }\r\n                        >\r\n                          <input\r\n                            className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-[15px]  bg-[#F2F3F7] hidden\"\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            onChange={handleChange(\"gender\", \"female\")}\r\n                            onClick={() => {\r\n                              setSelectedGender(true);\r\n\r\n                              // setGender(\"female\");\r\n                            }}\r\n                            value={gender}\r\n                          />\r\n                          Female\r\n                        </label>\r\n                      </span>\r\n                    </span>\r\n                  </span>\r\n                  {/* contact */}\r\n                  <label className=\"space-x-[10px]  text-gray-600 inline-block p-4  rounded-lg  select-none w-full \">\r\n                    <PhoneInput\r\n                      country=\"PH\"\r\n                      international\r\n                      withCountryCallingCode\r\n                      className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-[15px]  bg-[#F2F3F7]\"\r\n                      // placeholder=\"Contact Number\"\r\n                      value={contact_no}\r\n                      onChange={(phone) =>\r\n                        setFormData({ ...formData, contact_no: phone })\r\n                      }\r\n                    />\r\n                    {/* <input\r\n                      className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-[15px]  bg-[#F2F3F7]\"\r\n                      type=\"number\"\r\n                      placeholder=\"Contact Number\"\r\n                      onChange={handleChange(\"contact_no\")}\r\n                      value={contact_no}\r\n                    /> */}\r\n                  </label>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              {/* email */}\r\n              <label className=\"space-x-[10px]  text-gray-600 inline-block p-4  rounded-lg  select-none w-full \">\r\n                <input\r\n                  className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-[15px]  bg-[#F2F3F7]\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email address\"\r\n                  onChange={handleChange(\"email\")}\r\n                  value={email}\r\n                />\r\n              </label>\r\n              <span className={showRegister ? \"grid grid-cols-2\" : \"\"}>\r\n                {/* password 1 */}\r\n                <label className=\"space-x-[10px]  text-gray-600 inline-block p-4  rounded-lg  select-none w-full \">\r\n                  <input\r\n                    className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-[15px]  bg-[#F2F3F7]\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange(\"password1\")}\r\n                    value={password1}\r\n                  />\r\n                </label>\r\n                {/* password 2 */}\r\n                {!showRegister ? (\r\n                  \"\"\r\n                ) : (\r\n                  <label className=\"space-x-[10px]  text-gray-600 inline-block p-4  rounded-lg  select-none w-full \">\r\n                    <input\r\n                      className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-[15px]  bg-[#F2F3F7]\"\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      onChange={handleChange(\"password2\")}\r\n                      value={password2}\r\n                    />\r\n                  </label>\r\n                )}\r\n              </span>\r\n            </span>\r\n\r\n            {showRegister ? (\r\n              \"\"\r\n            ) : (\r\n              <p className=\"pt-4 text-[14px]  cursor-pointer  hover:text-black  text-gray-500\">\r\n                Forgot password?\r\n              </p>\r\n            )}\r\n\r\n            {/* submit btn */}\r\n\r\n            <button\r\n              className=\"self-center rounded-[38px] bg-[#5DCFFF] space-x-[10px]  m-8 py-[20px] w-[405px] text-white text-[24px]\"\r\n              onClick={(e) => {\r\n                if (showRegister) {\r\n                  handleSubmit(e);\r\n                }\r\n              }}\r\n            >\r\n              {showRegister ? \"REGISTER\" : \"LOGIN\"}\r\n            </button>\r\n\r\n            <button\r\n              className=\"self-center rounded-[38px] bg-[#5DCFFF] space-x-[10px]   py-[20px] w-[405px] text-white text-[24px]\"\r\n              // onClick={() => {\r\n              //   setShowModal(!showModal);\r\n              // }}\r\n            >\r\n              <GoogleLogin\r\n                clientId={process.env.REACT_APP_GOOGLE_CLIENT}\r\n                buttonText=\"Login with Google\"\r\n                render={(renderProps) => (\r\n                  <button\r\n                    onClick={renderProps.onClick}\r\n                    disabled={renderProps.disabled}\r\n                    className=\"flex justify-center w-full items-center space-x-5 h-full\"\r\n                  >\r\n                    <span className=\"inline-block \">\r\n                      <FaGoogle />\r\n                    </span>\r\n                    {showRegister ? (\r\n                      <span>Register with Google</span>\r\n                    ) : (\r\n                      <span>Login with Google</span>\r\n                    )}\r\n                  </button>\r\n                )}\r\n                onSuccess={responseSuccessGoogle}\r\n                onFailure={responseErrorGoogle}\r\n                cookiePolicy={\"single_host_origin\"}\r\n              />\r\n            </button>\r\n            <p\r\n              className=\" pt-4 text-[14px]  cursor-pointer  hover:text-black text-center text-gray-500\"\r\n              onClick={() => setShowRegister(!showRegister)}\r\n            >\r\n              {showRegister\r\n                ? \"Have an account? Click here to Login\"\r\n                : \"Don't have an account? Click here to Signup\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport ModalLogin from \"./ModalLogin\";\r\n\r\nfunction Footer() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  return (\r\n    <footer className=\"bottom-0 bg-[#5dcfff] flex justify-between p-4 md:p-10 h-[122px] \">\r\n      <span className=\"text-white self-center text-xl md:text-[39px] 2xl:text-[20px] w-full\">\r\n        <a className=\"cursor-pointer\" onClick={() => setShowModal(!showModal)}>\r\n          Access Exclusive Site\r\n        </a>\r\n      </span>\r\n      <ul className=\"flex self-center space-x-5 justify-end w-full\"></ul>\r\n      {showModal ? (\r\n        <ModalLogin showModal={showModal} setShowModal={setShowModal} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useContext } from \"react\";\r\nimport { ThoughtDiaryContext } from \"../../Context/ThoughtDiaryContext\";\r\nimport { ShowMoodsContext } from \"../../Context/ShowMoodsContext\";\r\n\r\nconst Landing = (props) => {\r\n  const { showThoughtDiaryTool, setShowThoughtDiaryTool } =\r\n    useContext(ThoughtDiaryContext);\r\n  console.log(showThoughtDiaryTool);\r\n\r\n  const { showMoods, setShowMoods } = useContext(ShowMoodsContext);\r\n\r\n  return (\r\n    <div\r\n      // className={\r\n      //   showThoughtDiaryTool\r\n      //     ? \"hidden \"\r\n      //     : \"container mx-auto my-auto md:pt-[100px] 2xl:pt-[200px] md:transform md:scale-[.79] 2xl:scale-[1]\"\r\n      // }\r\n      className={\r\n        showMoods\r\n          ? \"hidden  \"\r\n          : showThoughtDiaryTool\r\n          ? \"hidden  \"\r\n          : \"container mx-auto my-auto md:pt-[100px] 2xl:pt-[200px] md:transform md:scale-[.79] 2xl:scale-[1] h-full \"\r\n      }\r\n    >\r\n      <div className=\"md:grid md:grid-cols-12 gap-4 \">\r\n        {/* left */}\r\n        <div className=\"col-span-5 flex justify-center \">\r\n          <label>\r\n            <img\r\n              className=\"h-full md:h-[400px] md:w-[400px]\"\r\n              src=\"home_ulayaw.png\"\r\n            />\r\n          </label>\r\n        </div>\r\n        {/* right */}\r\n        <div className=\"col-span-7 flex flex-col\">\r\n          <label className=\"text-[48px] leading-tight text-[#28AFE8]\">\r\n            Kaibigan sa kalusugang pangkaisipan.\r\n          </label>\r\n          <label className=\"text-[30px] text-[#5A676D] \">\r\n            Ipahayag ang iyong nararamdaman.\r\n          </label>\r\n\r\n          {/* buttons-upper */}\r\n          {/* <div className=\"text-[24px] font-medium flex flex-row space-x-[14px]\">\r\n            <button className=\"w-[183px] mt-[48px] h-[57px] bg-[#5DCFFF] rounded-[15px]  text-center py-2 text-[#29363C] cursor-pointer transform hover:scale-[1.010]\">\r\n              Assessment\r\n            </button>\r\n            <input\r\n              className=\"border-[1px] border-[#3E3E3E] w-[382px] mt-[48px] h-[57px] rounded-[5px] text-[#737373] font-normal px-6 py-2  focus:ring-[#5DCFFF] transform hover:scale-[1.005]\"\r\n              type=\"text\"\r\n              placeholder=\"Enter a code\"\r\n            />\r\n          </div> */}\r\n\r\n          <div className=\"text-center text-[#7a6d6d] w-[579px] mt-[23px] border-t-[1px] border-[#3E3E3E]\">\r\n            {/* or */}\r\n          </div>\r\n\r\n          {/* buttons-lower */}\r\n          <div className=\"text-[24px] font-medium flex flex-row space-x-[14px] w-[579px] text-[#1A4A61] text-justify\">\r\n            <label>\r\n              Pindutin ang emoji ni Ulayaw upang makapagsimula sa\r\n              pakikipag-usap.\r\n            </label>\r\n            {/* <button className=\"w-full mt-[23px] h-[57px] bg-[#5DCFFF] rounded-[15px]  text-center py-2 text-[#29363C] transform hover:scale-[1.005] cursor-pointer\">\r\n              <p> Conversation</p>\r\n            </button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\n\r\nfunction Message({ speaks, text }) {\r\n  // console.log(speaks);\r\n  return (\r\n    <div className=\" rounded-lg  mb-2 text-sm \">\r\n      <div>\r\n        {speaks === \"bot\" && (\r\n          <MessageFormat speaks={speaks} text={text} float={\"left\"} />\r\n        )}\r\n        {speaks === \"user\" && (\r\n          <MessageFormat speaks={speaks} text={text} float={\"right\"} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MessageFormat({ speaks, text, float }) {\r\n  // console.log(float);\r\n  return (\r\n    <div\r\n      className={\r\n        float === \"left\"\r\n          ? \"flex justify-start space-x-2  p-2 rounded-lg bottom-0  max-w-[500px]\"\r\n          : \"flex flex-row-reverse space-x-2 space-x-reverse  p-2 rounded-lg max-w-[500px] break-words \"\r\n      }\r\n    >\r\n      <div\r\n        className={float === \"left\" ? \"flex justify-end flex-col\" : \"hidden\"}\r\n      >\r\n        <div className=\" rounded-full flex justify-center  text-white h-10 w-10  \">\r\n          <img src=\"ulayaw.png\" />\r\n          {/* <a href=\"/\">{speaks}</a> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={\r\n          float === \"left\"\r\n            ? \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2 bg-[#F2EFEF] text-black font-medium text-left\"\r\n            : \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2 bg-[#5DCFFF] text-white text-left\"\r\n        }\r\n      >\r\n        <span>{text}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div\r\n      className=\"max-w-sm rounded-sm overflow-hidden shadow-lg m-2 border-2 border-gray-300 flex flex-col \"\r\n      style={{ height: 350, width: 240 }}\r\n    >\r\n      {/* pic */}\r\n      <div\r\n        className=\"h-40 bg-cover hover:bg-gray\"\r\n        alt={props.payload.fields.header.stringValue}\r\n        style={{\r\n          backgroundImage: `url(${props.payload.fields.image.stringValue})`,\r\n        }}\r\n      ></div>\r\n\r\n      <div className=\"mx-6 my-4 border-b border-gray-light \">\r\n        {/* title */}\r\n        <div className=\"font-medium text-base text-gray-darker mb-4 h-10\">\r\n          {props.payload.fields.header.stringValue}\r\n        </div>\r\n        {/* body */}\r\n        <p className=\"font-normal text-gray-dark text-sm mb-2 overflow-auto h-20\">\r\n          {props.payload.fields.description.stringValue}\r\n        </p>\r\n        <p className=\"font-normal text-gray-dark text-sm mb-4\">\r\n          {/* {props.payload.fields.price.stringValue} */}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"font-normal text-gray-dark text-sm mb-4 text-center  h-10\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href={props.payload.fields.link.stringValue}\r\n        >\r\n          Simulan\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ShowChatBox } from \"../../Context/ShowChatBox\";\r\n\r\nconst QuickReply = (props) => {\r\n  const { showChatBox, setShowChatBox } = useContext(ShowChatBox);\r\n\r\n  if (props.reply.structValue.fields.payload) {\r\n    return (\r\n      <a\r\n        style={{ margin: 3 }}\r\n        href=\"/\"\r\n        className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10  \"\r\n        onClick={(event) => {\r\n          props.click(\r\n            event,\r\n            props.reply.structValue.fields.payload.stringValue,\r\n            props.reply.structValue.fields.text.stringValue\r\n          );\r\n          // console.log(props.showDiary, \"diary\");\r\n          if (props.showDiary) setShowChatBox(false);\r\n          else setShowChatBox(true);\r\n          if (props.showUTS) {\r\n            setShowChatBox(false);\r\n          }\r\n\r\n          // if (props.dontShowChatBox) setShowChatBox(false);\r\n        }}\r\n      >\r\n        {props.reply.structValue.fields.text.stringValue}\r\n      </a>\r\n    );\r\n  } else {\r\n    return (\r\n      <a\r\n        style={{ margin: 3 }}\r\n        href={props.reply.structValue.fields.link.stringValue}\r\n        className=\"bg-gray-500 rounded-full p-2 text-white self-center h-10 w-10 \"\r\n      >\r\n        {props.reply.structValue.fields.text.stringValue}\r\n      </a>\r\n    );\r\n  }\r\n};\r\n\r\nexport default QuickReply;\r\n","import React, { useState, useContext } from \"react\";\r\nimport QuickReply from \"./QuickReply\";\r\nimport { ShowChatBox } from \"../../Context/ShowChatBox\";\r\n\r\nfunction QuickReplies(props) {\r\n  const [isClicked, setIsClicked] = useState();\r\n  const [showQuickReply, setShowQuickReply] = useState(true);\r\n  const { showChatBox, setShowChatBox } = useContext(ShowChatBox);\r\n\r\n  function _handleClick(event, payload, text) {\r\n    props.replyClick(event, payload, text);\r\n    setShowQuickReply(false);\r\n\r\n    //\r\n  }\r\n\r\n  function renderQuickReply(reply, i) {\r\n    return (\r\n      <QuickReply\r\n        key={i}\r\n        click={_handleClick}\r\n        showDiary={props.showDiary}\r\n        reply={reply}\r\n        showUTS={props.showUTS}\r\n        // dontShowChatBox={props.dontShowChatBox}\r\n      />\r\n    );\r\n  }\r\n\r\n  function renderQuickReplies(quickReplies) {\r\n    setShowChatBox(false);\r\n    if (quickReplies) {\r\n      return quickReplies.map((reply, i) => {\r\n        return renderQuickReply(reply, i);\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showQuickReply ? (\r\n        <div\r\n          className={\"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"}\r\n        >\r\n          {/* <div className={\"flex justify-end flex-col\"}>\r\n      <div className=\" rounded-full flex justify-center  text-white h-10 w-10  \">\r\n        <img src=\"ulayaw.png\" />\r\n      </div>\r\n    </div> */}\r\n\r\n          <div\r\n            className={\r\n              \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n            }\r\n          >\r\n            <span className=\"flex flex-wrap\">\r\n              {renderQuickReplies(props.payload)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuickReplies;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Choice = (props) => {\r\n  function _handleCheck(event) {\r\n    if (props.selectedChoices[props.currentInstance - 1].choice_text)\r\n      return true;\r\n    return true;\r\n  }\r\n\r\n  function _handleChange() {}\r\n\r\n  return (\r\n    <div className=\"flex\">\r\n      <label className=\"cursor-pointer hover:text-[#0C86BA] hover:underline p-0.5 \">\r\n        <input\r\n          type=\"radio\"\r\n          value={props.choices.structValue.fields.text.stringValue}\r\n          name=\"choice\"\r\n          className=\"self-center mr-2\"\r\n          onClick={(event) =>\r\n            props.click(\r\n              event,\r\n              props.question_no,\r\n              props.question_text,\r\n              props.choices.structValue.fields.text.stringValue,\r\n              props.choices.structValue.fields.score.stringValue\r\n            )\r\n          }\r\n          // checked={}\r\n        />\r\n        {props.choices.structValue.fields.text.stringValue}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Choice;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Choice from \"./Choice\";\r\n\r\nconst Instance = (props) => {\r\n  const [nextBtn, setNextBtn] = useState(true);\r\n  const [prevBtn, setPrevBtn] = useState(true);\r\n  const [doneBtn, setDoneBtn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.item.structValue.fields.question_num.numberValue === 4) {\r\n      setNextBtn(false);\r\n      setDoneBtn(true);\r\n    }\r\n\r\n    if (props.item.structValue.fields.question_num.numberValue === 1) {\r\n      setPrevBtn(false);\r\n    }\r\n  });\r\n\r\n  function renderChoiceInstance(item, i) {\r\n    return (\r\n      <Choice\r\n        key={i}\r\n        click={props.click}\r\n        choices={item}\r\n        selectedChoices={props.selectedChoices}\r\n        setSelectedChoices={props.setSelectedChoices}\r\n        currentInstance={props.currentInstance}\r\n        question_no={props.item.structValue.fields.question_num.numberValue}\r\n        question_text={props.item.structValue.fields.question.stringValue}\r\n      />\r\n    );\r\n  }\r\n\r\n  function renderChoice(instance) {\r\n    if (instance) {\r\n      return instance.map((item, i) => {\r\n        return renderChoiceInstance(item, i);\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  function _handleNextClick() {\r\n    if (props.currentInstance < 4) {\r\n      props.setCurrentInstance(props.currentInstance + 1);\r\n    }\r\n  }\r\n\r\n  function _handlePrevClick() {\r\n    if (props.currentInstance >= 1) {\r\n      props.setCurrentInstance(props.currentInstance - 1);\r\n    }\r\n  }\r\n\r\n  // console.log(props.currentInstance);\r\n  // console.log(props.item.structValue.fields.question_num.numberValue);\r\n  if (\r\n    props.currentInstance ===\r\n    props.item.structValue.fields.question_num.numberValue\r\n  ) {\r\n    return (\r\n      <div className=\"flex flex-col\">\r\n        {/*  Question identifer */}\r\n        <div className=\"text-[#0C86BA] pb-2\">\r\n          Question {props.item.structValue.fields.question_num.numberValue} of{\" \"}\r\n          {props.instanceLength}\r\n        </div>\r\n\r\n        {/*  Question */}\r\n\r\n        <div>\r\n          <form> {props.item.structValue.fields.question.stringValue} </form>\r\n        </div>\r\n\r\n        {/*  Choices */}\r\n        <div className=\"flex flex-col p-4 \">\r\n          {renderChoice(props.item.structValue.fields.choices.listValue.values)}\r\n        </div>\r\n\r\n        {/* Buttons */}\r\n        <div\r\n          className={\r\n            prevBtn\r\n              ? \"flex flex-row justify-between\"\r\n              : \"flex flex-row justify-end\"\r\n          }\r\n        >\r\n          {/* prev */}\r\n          <a\r\n            className={\r\n              prevBtn\r\n                ? \"text-[#0C86BA]  cursor-pointer hover:underline select-none\"\r\n                : \"text-[#0C86BA]  cursor-pointer hover:underline select-none hidden\"\r\n            }\r\n            onClick={() => _handlePrevClick()}\r\n          >\r\n            Previous\r\n          </a>\r\n          {/* next */}\r\n          <a\r\n            className={\r\n              nextBtn\r\n                ? \"text-[#0C86BA]  cursor-pointer hover:underline select-none\"\r\n                : \"text-[#0C86BA]  cursor-pointer hover:underline select-none hidden\"\r\n            }\r\n            onClick={() => _handleNextClick()}\r\n          >\r\n            Next\r\n          </a>\r\n          {/* done */}\r\n          <a\r\n            className={\r\n              doneBtn\r\n                ? \"text-[#0C86BA]  cursor-pointer hover:underline select-none\"\r\n                : \"text-[#0C86BA]  cursor-pointer hover:underline select-none hidden\"\r\n            }\r\n            onClick={(event) => props._handleDoneClick(event)}\r\n          >\r\n            Done\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <div></div>;\r\n};\r\n\r\nexport default Instance;\r\n","import React, { useState } from \"react\";\r\nimport Message from \"./Message\";\r\nimport Instance from \"./Instance\";\r\n\r\nfunction MultipleChoice(props) {\r\n  const [currentInstance, setCurrentInstance] = useState(1);\r\n  const [selectedChoices, setSelectedChoices] = useState([]);\r\n\r\n  function _handleDoneClick() {\r\n    if (currentInstance == 4) {\r\n      let total = 0;\r\n      for (let i = 0; i < selectedChoices.length; i++) {\r\n        total += parseInt(selectedChoices[i].choice_score);\r\n      }\r\n      props._handleAssessmentResult(total);\r\n      // console.log(total);\r\n      // console.log(\"You are done asdasd!\");\r\n      // console.log(selectedChoices);\r\n      // props.setCurrentInstance();\r\n    }\r\n  }\r\n\r\n  const addMoreItem = (\r\n    question_no,\r\n    question_text,\r\n    choice_text,\r\n    choice_score\r\n  ) => {\r\n    setSelectedChoices((prevSelectedChoices) => [\r\n      ...prevSelectedChoices,\r\n      {\r\n        question_no,\r\n        question_text,\r\n        choice_text,\r\n        choice_score,\r\n      },\r\n    ]);\r\n    console.log(selectedChoices);\r\n  };\r\n\r\n  const updateItem = (id, newChoice_text, newChoice_score, index) => {\r\n    // var index = array.findIndex(x=> x.id === id);\r\n\r\n    let g = selectedChoices[index];\r\n    g.choice_text = newChoice_text;\r\n    g.choice_score = newChoice_score;\r\n\r\n    console.log(g);\r\n  };\r\n\r\n  function _handleClick(\r\n    // props\r\n    event,\r\n    question_no,\r\n    question_text,\r\n    choice_text,\r\n    choice_score\r\n  ) {\r\n    var index = selectedChoices.findIndex((x) => x.question_no === question_no);\r\n\r\n    if (index === -1) {\r\n      addMoreItem(question_no, question_text, choice_text, choice_score);\r\n    } else {\r\n      updateItem(question_no, choice_text, choice_score, index);\r\n\r\n      // props.replyClick(event, payload, text);\r\n      // event.preventDefault();\r\n      // event.stopPropagation();\r\n      console.log(selectedChoices);\r\n    }\r\n  }\r\n\r\n  function renderInstance(item, i, instanceLength) {\r\n    // setCurrentInstance(1);\r\n    return (\r\n      <Instance\r\n        key={i}\r\n        click={_handleClick}\r\n        item={item}\r\n        instanceLength={instanceLength}\r\n        setAssessmentScore={props.setAssessmentScore}\r\n        assessmentScore={props.assessmentScore}\r\n        currentInstance={currentInstance}\r\n        setCurrentInstance={setCurrentInstance}\r\n        setSelectedChoices={setSelectedChoices}\r\n        selectedChoices={selectedChoices}\r\n        _handleDoneClick={_handleDoneClick}\r\n      />\r\n    );\r\n  }\r\n\r\n  function renderMultipleChoice(instance) {\r\n    if (instance) {\r\n      return instance.map((item, i) => {\r\n        return renderInstance(item, i, instance.length);\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/*  MultipleChoice Instances */}\r\n      <Message\r\n        key={props.i}\r\n        speaks={props.speaks}\r\n        text={renderMultipleChoice(props.payload)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultipleChoice;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { MaxInputContext } from \"../../../Context/MaxInputContext.js\";\r\nimport { GetOtherEmotionCAnswerContext } from \"../../../Context/GetOtherEmotionCAnswerContext.js\";\r\nimport { GetOtherEmotionAllContext } from \"../../../Context/GetOtherEmotionAllContext.js\";\r\n\r\nconst Mood = (props) => {\r\n  const { maxInput, setMaxInput } = useContext(MaxInputContext);\r\n  const { getOtherEmotionCAnswer, setGetOtherEmotionCAnswer } = useContext(\r\n    GetOtherEmotionCAnswerContext\r\n  );\r\n  const { getOtherEmotionAll, setGetOtherEmotionAll } = useContext(\r\n    GetOtherEmotionAllContext\r\n  );\r\n  function _handleCheck(event) {\r\n    let res = false;\r\n    if (props.selectedMoods.length < 1) {\r\n      return true;\r\n    }\r\n    for (let i = 0; i < props.selectedMoods.length; i++) {\r\n      if (props.selectedMoods[i].mood_text === event.target.value) {\r\n        res = true;\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  function _handleMoodImg(mood) {\r\n    if (mood === \"low\") {\r\n      return \"low.png\";\r\n    }\r\n    if (mood === \"sad\") {\r\n      return \"sad.png\";\r\n    }\r\n    if (mood === \"annoyed\") {\r\n      return \"annoyed.png\";\r\n    }\r\n    if (mood === \"disappointed\") {\r\n      return \"disappointed.png\";\r\n    }\r\n    if (mood === \"empty\") {\r\n      return \"empty.png\";\r\n    }\r\n    if (mood === \"overwhelmed\") {\r\n      return \"overwhelmed.png\";\r\n    }\r\n    if (mood === \"worried\") {\r\n      return \"worried.png\";\r\n    }\r\n    if (mood === \"frustrated\") {\r\n      return \"frustrated.png\";\r\n    }\r\n    if (mood === \"guilty\") {\r\n      return \"guilty.png\";\r\n    }\r\n    if (mood === \"hopeless\") {\r\n      return \"hopeless.png\";\r\n    }\r\n    if (mood === \"lonely\") {\r\n      return \"lonely.png\";\r\n    }\r\n    if (mood === \"nervous\") {\r\n      return \"nervous.png\";\r\n    }\r\n    if (mood === \"stressed\") {\r\n      return \"stressed.png\";\r\n    }\r\n    if (mood === \"heavy\") {\r\n      return \"heavy.png\";\r\n    }\r\n    if (mood === \"tired\") {\r\n      return \"tired.png\";\r\n    }\r\n    if (mood === \"demotivated\") {\r\n      return \"demotivated.png\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"py-5 p-2 select-none transform  scale-90\">\r\n      <label\r\n        className={\r\n          props.select\r\n            ? \" bg-[#1D80AA] py-[65px]  flex justify-center flex-col cursor-pointer   text-white hover:bg-[#0C86BA] h-[120px] w-[120px] text-center   rounded-[35px] items-center\"\r\n            : \"py-[65px] flex justify-center flex-col cursor-pointer   hover:text-white hover:bg-[#0C86BA] h-[120px] w-[120px] text-center checked:bg-[#0C86BA] bg-[#5CCBF9] rounded-[35px] items-center \"\r\n        }\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          value={props.mood.mood_text}\r\n          name=\"choice\"\r\n          className=\"hidden self-center form-checkbox  text-center\"\r\n          onClick={(event) => {\r\n            // props.onChange(!props.checked);\r\n            props.click(event, props.mood.mood_text);\r\n          }}\r\n          onChange={(event) => {\r\n            let check = event.target.checked;\r\n            if (props.otherEmotion) {\r\n              let count = [];\r\n              let ys = [];\r\n              props.selectedMoods.map((d) => {\r\n                if (d.select) {\r\n                  count.push({\r\n                    select: d.select,\r\n                    mood_text: d.mood_text,\r\n                  });\r\n                }\r\n              });\r\n              props.setSelectedMoods(\r\n                props.selectedMoods.map((m) => {\r\n                  if (m.mood_text === props.mood.mood_text) {\r\n                    // if (count.length <= 5) {\r\n                    console.log(check, \"sd\");\r\n                    console.log(maxInput, \"Please \");\r\n                    if (check && maxInput < 5) {\r\n                      setMaxInput(maxInput + 1);\r\n                      setGetOtherEmotionAll((prevChats) => {\r\n                        return [...prevChats, props.mood.mood_text];\r\n                      });\r\n                      m.select = check;\r\n                    }\r\n                    if (!check && maxInput >= 1) {\r\n                      var index = getOtherEmotionAll.findIndex(\r\n                        (x) => x === props.mood.mood_text\r\n                      );\r\n                      if (index != -1) {\r\n                        let g = [...getOtherEmotionAll];\r\n                        g.splice(index, 1);\r\n                        setGetOtherEmotionAll(g);\r\n                      }\r\n\r\n                      setMaxInput(maxInput - 1);\r\n                      m.select = check;\r\n                    }\r\n                    if (count.length >= 5 && maxInput === 5) {\r\n                      console.log(count);\r\n                      if (check === true) {\r\n                        alert(\"You've selected 5 Emotions already\");\r\n                        m.select = false;\r\n                      }\r\n                    }\r\n\r\n                    // }\r\n                  }\r\n                  console.log(getOtherEmotionAll);\r\n                  ys.push({\r\n                    select: m.select,\r\n                    mood_text: m.mood_text,\r\n                  });\r\n                  return m;\r\n                })\r\n              );\r\n              setGetOtherEmotionCAnswer(ys);\r\n\r\n              // console.log(maxInput, \"max\");\r\n            } else {\r\n              props.setSelectedMoods(\r\n                props.selectedMoods.map((m) => {\r\n                  if (m.mood_text === props.mood.mood_text) {\r\n                    m.select = check;\r\n                  }\r\n                  return m;\r\n                })\r\n              );\r\n            }\r\n          }}\r\n          checked={props.select}\r\n        />\r\n        <img\r\n          className=\"w-[80px] h-[80] cursor-pointer\"\r\n          src={_handleMoodImg(props.mood.mood_text)}\r\n        />\r\n        <p className=\"font-bold cursor-pointer inline-block\">\r\n          {props.mood.mood_text}\r\n        </p>\r\n      </label>\r\n      {/* <Toaster /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mood;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Message from \"../Message\";\r\nimport Mood from \"./Mood\";\r\nimport { ShowMoodsContext } from \"../../../Context/ShowMoodsContext\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { GetHotEmotionCAnswerContext } from \"../../../Context/GetHotEmotionCAnswerContext.js\";\r\nimport { GetOtherEmotionCAnswerContext } from \"../../../Context/GetOtherEmotionCAnswerContext.js\";\r\nimport { ShowChatBox } from \"../../../Context/ShowChatBox.js\";\r\nimport { MaxInputContext } from \"../../../Context/MaxInputContext.js\";\r\n\r\n// import Instance from \"./Instance\";\r\n\r\nfunction GetMoods(props) {\r\n  // const { showMoods, setShowMoods } = useContext(ShowMoodsContext);\r\n  const [moodsNumber, setMoodsNumber] = useState(0);\r\n  const [checked, setChecked] = useState(false);\r\n  const moodsPerPage = 6;\r\n  const pagesVisited = moodsNumber * moodsPerPage;\r\n  const pageCount = Math.ceil(props.payload.length / moodsPerPage);\r\n  const { getHotEmotionCAnswer, setGetHotEmotionCAnswer } = useContext(\r\n    GetHotEmotionCAnswerContext\r\n  );\r\n  const { getOtherEmotionCAnswer, setGetOtherEmotionCAnswer } = useContext(\r\n    GetOtherEmotionCAnswerContext\r\n  );\r\n  const { showChatBox, setShowChatBox } = useContext(ShowChatBox);\r\n  const [showMoods, setShowMoods] = useState(false);\r\n  const { maxInput, setMaxInput } = useContext(MaxInputContext);\r\n\r\n  useEffect(() => {\r\n    setShowChatBox(false);\r\n    if (props.showAtEntrance) {\r\n      setShowMoods(true);\r\n    }\r\n\r\n    // console.log(props.payload, \"payload\");\r\n    // console.log(props.selectedMoods, \"moods\");\r\n\r\n    if (props.selectedMoods.length === 0) {\r\n      props.setSelectedMoods(\r\n        props.payload.map((d) => {\r\n          return {\r\n            select: false,\r\n            mood_text: d.stringValue,\r\n          };\r\n        })\r\n      );\r\n    }\r\n    if (props.otherEmotion) {\r\n      let ys = [];\r\n      if (getOtherEmotionCAnswer != null) {\r\n        getOtherEmotionCAnswer.map((d) => {\r\n          if (!d.select) {\r\n            ys.push({\r\n              select: d.select,\r\n              mood_text: d.mood_text,\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        props.selectedMoods.map((d) => {\r\n          if (!d.select) {\r\n            ys.push({\r\n              select: d.select,\r\n              mood_text: d.mood_text,\r\n            });\r\n          }\r\n        });\r\n        props.setSelectedMoods([]);\r\n        props.setSelectedMoods(ys);\r\n      }\r\n      // console.log(ys, \"ys\");\r\n      // console.log(props.selectedMoods);\r\n    }\r\n\r\n    // else {\r\n    //   props.setSelectedMoods(\r\n    //     props.selectedMoods.map((d) => {\r\n    //       return {\r\n    //         select: d.select,\r\n    //         mood_text: d.mood_text,\r\n    //       };\r\n    //     })\r\n    //   );\r\n    // }\r\n\r\n    // console.log(props.selectedMoods, \"moods2\");\r\n  }, []);\r\n\r\n  function _changePage({ selected }) {\r\n    setMoodsNumber(selected);\r\n  }\r\n\r\n  function _handleDoneClick() {\r\n    // console.log(props.selectedMoods);\r\n    if (props.hotEmotion || props.otherEmotion) {\r\n      setShowChatBox(false);\r\n    } else setShowChatBox(true);\r\n    setShowMoods(false);\r\n\r\n    if (props.hotEmotion) {\r\n      setGetHotEmotionCAnswer(props.selectedMoods);\r\n    }\r\n\r\n    if (props.otherEmotion) {\r\n      setGetOtherEmotionCAnswer(props.selectedMoods);\r\n\r\n      // console.log(getOtherEmotionCAnswer, \"otheres\");\r\n    }\r\n    // console.log(getHotEmotionCAnswer);\r\n    props._handleMoodResult();\r\n  }\r\n\r\n  const updateMood = (mood_text, index) => {\r\n    // var index = array.findIndex(x=> x.id === id);\r\n\r\n    let g = props.selectedMoods[index];\r\n    g.mood_text = mood_text;\r\n\r\n    console.log(g);\r\n  };\r\n\r\n  const addMoreMood = (mood_text) => {\r\n    props.setSelectedMoods((prevSelectedMoods) => [\r\n      ...prevSelectedMoods,\r\n      {\r\n        mood_text,\r\n      },\r\n    ]);\r\n    // console.log(selectedMoods);\r\n  };\r\n\r\n  const removeMood = (mood_text, index) => {\r\n    let g = [...props.selectedMoods];\r\n    g.splice(index, 1);\r\n    props.setSelectedMoods(g);\r\n    // console.log(g, \"g\");\r\n    // console.log(selectedMoods, \"g-sele\");\r\n  };\r\n\r\n  function _handleClick(\r\n    // props\r\n    event,\r\n    //   mood_id,\r\n    mood_text\r\n    //   question_text,\r\n    //   choice_text,\r\n    //   choice_score\r\n  ) {\r\n    var index = props.selectedMoods.findIndex((x) => x.mood_text === mood_text);\r\n\r\n    if (index === -1) {\r\n      addMoreMood(mood_text);\r\n    } else {\r\n      removeMood(mood_text, index);\r\n\r\n      // props.replyClick(event, payload, text);\r\n      // event.preventDefault();\r\n      // event.stopPropagation();\r\n      // console.log(props.selectedMoods);\r\n    }\r\n  }\r\n\r\n  // function _handleCheck(mood, i) {\r\n  //   if (props.selectedMoods.length != 0) {\r\n  //     console.log(\"asdsd\", props.selectedMoods.length);\r\n  //     props.selectedMoods.map((mood1) => {\r\n  //       console.log(mood1.mood_text, \"asjk\");\r\n  //       if (mood1.mood_text === mood.stringValue) {\r\n  //         console.log(mood.stringValue);\r\n  //         return renderMood(mood, i);\r\n  //       }\r\n  //     });\r\n  //     // for (let i = 0; i < props.selectedMoods.length; i++) {\r\n  //     //   if (props.selectedMoods[i].mood_text === mood.stringValue) {\r\n  //     //     console.log(props.selectedMoods[i].mood_text, \"bik\");\r\n  //     //     return setChecked(true);\r\n  //     //   }\r\n  //     //   break;\r\n  //     // }\r\n  //   }\r\n  //   return renderMood(mood, i);\r\n  // }\r\n  function renderMood(mood, i) {\r\n    return (\r\n      <Mood\r\n        key={i}\r\n        click={_handleClick}\r\n        mood={mood}\r\n        select={mood.select}\r\n        // setMoodCount={setMoodCount}\r\n        // moodCount={moodCount}\r\n        //   instanceLength={instanceLength}\r\n        //   setAssessmentScore={props.setAssessmentScore}\r\n        //   assessmentScore={props.assessmentScore}\r\n        //   currentInstance={currentInstance}\r\n        //   setCurrentInstance={setCurrentInstance}\r\n        setSelectedMoods={props.setSelectedMoods}\r\n        selectedMoods={props.selectedMoods}\r\n        onChange={setChecked}\r\n        checked={checked}\r\n        dontShowChatBox={props.dontShowChatBox}\r\n        otherEmotion={props.otherEmotion}\r\n        //   _handleDoneClick={_handleDoneClick}\r\n      />\r\n    );\r\n  }\r\n\r\n  function renderMoods(moods) {\r\n    if (moods) {\r\n      return (\r\n        <div>\r\n          <div className=\"flex flex-col\">\r\n            {/*  Moods */}\r\n\r\n            {/* flex flex-col p-4 */}\r\n            <div className=\"grid grid-cols-3  \">\r\n              {moods\r\n                .slice(pagesVisited, pagesVisited + moodsPerPage)\r\n                .map((mood, i) => {\r\n                  // console.log(mood, \"mood\");\r\n                  // return _handleCheck(mood, i);\r\n                  return renderMood(mood, i);\r\n                })}\r\n            </div>\r\n\r\n            {/* Buttons */}\r\n            <div className=\"flex flex-col justify-between\">\r\n              {/* React Paginate */}\r\n              <ReactPaginate\r\n                previousLabel={\"Previous\"}\r\n                nextLabel={\"Next\"}\r\n                previous={\"Previous\"}\r\n                pageCount={pageCount}\r\n                onPageChange={_changePage}\r\n                containerClassName={\"paginationBttns\"}\r\n                previousLinkClassName={\"previousBttn\"}\r\n                nextLinkClassName={\"nextBttn\"}\r\n                disabledClassName={\"paginationDisabled\"}\r\n                activeClassName={\"paginationActive\"}\r\n              />\r\n\r\n              {/* done */}\r\n              <a\r\n                className=\"text-[#0C86BA]  cursor-pointer hover:underline select-none text-center\"\r\n                onClick={(event) => {\r\n                  // setShowMoods(!showMoods);\r\n                  // console.log(showMoods, \"MOODSDSDS\");\r\n                  _handleDoneClick(event);\r\n                }}\r\n              >\r\n                Done\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {showMoods ? (\r\n        <div className=\"\">\r\n          <Message\r\n            key={props.i}\r\n            speaks={props.speaks}\r\n            // text={renderMoods(props.payload)}\r\n            text={renderMoods(props.selectedMoods)}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n\r\n  //   return (\r\n  //     <div>\r\n  //       {/*  Render moods */}\r\n  //       {renderMoods(props.payload)}\r\n  //     </div>\r\n  //   );\r\n  //   return <div></div>;\r\n}\r\n\r\nexport default GetMoods;\r\n{\r\n  /* {moods.map((mood, i) => {\r\n                return renderMood(mood, i, moods.length);\r\n              })} */\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { GetLocationContext } from \"../Context/GetLocationContext\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst useGeoLocation = () => {\r\n  const cookies = new Cookies();\r\n  const [location, setLocation] = useState({\r\n    loaded: false,\r\n    coordinates: { lat: \"\", lng: \"\" },\r\n  });\r\n  const { getLocation, setGetLocation } = useContext(GetLocationContext);\r\n\r\n  const onSuccess = (position) => {\r\n    setLocation({\r\n      loaded: true,\r\n      coordinates: {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      },\r\n    });\r\n    setGetLocation(true);\r\n    // cookies.set(\"locationCookie\", true, { path: \"/\" });\r\n\r\n    // setGetLocation({\r\n    //   loaded: true,\r\n    //   coordinates: {\r\n    //     lat: location.coords.latitude,\r\n    //     lng: location.coords.longitude,\r\n    //   },\r\n    // });\r\n  };\r\n\r\n  const onError = (error) => {\r\n    setLocation({\r\n      loaded: true,\r\n      error: {\r\n        code: error.code,\r\n        message: error.message,\r\n      },\r\n    });\r\n    if (error.code === 1) {\r\n      setGetLocation(false);\r\n      //   cookies.set(\"locationCookie\", false, { path: \"/\" });\r\n    }\r\n    // setGetLocation({\r\n    //   loaded: true,\r\n    //   error: {\r\n    //     code: error.code,\r\n    //     message: error.message,\r\n    //   },\r\n    // });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\"geolocation\" in navigator) {\r\n      onError({\r\n        code: 0,\r\n        message: \"Geolocation not supported\",\r\n      });\r\n    }\r\n    // if (navigator.geolocation) {\r\n    //   navigator.geolocation.watchPosition(onSuccess, onError);\r\n    // } else {\r\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n    // }\r\n  }, []);\r\n  //   console.log(location);\r\n  return location;\r\n};\r\n\r\nexport default useGeoLocation;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst mapStyles = {\r\n  map1: {\r\n    position: \"absolute\",\r\n    width: \"350px\",\r\n    height: \"350px\",\r\n  },\r\n};\r\n\r\nexport class CurrentLocation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // const { lat, lng } = this.props.initialCenter;\r\n\r\n    this.state = {\r\n      currentLocation: {\r\n        lat: props.lat,\r\n        lng: props.lng,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.google !== this.props.google) {\r\n      this.loadMap();\r\n    }\r\n    if (prevState.currentLocation !== this.state.currentLocation) {\r\n      this.recenterMap();\r\n    }\r\n  }\r\n\r\n  recenterMap() {\r\n    const map1 = this.map1;\r\n    const current = this.state.currentLocation;\r\n    const google = this.props.google;\r\n    const maps = google.maps;\r\n\r\n    if (map1) {\r\n      let center = new maps.LatLng(current.lat, current.lng);\r\n      map1.panTo(center);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.centerAroundCurrentLocation) {\r\n      if (navigator && navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n          const coords = pos.coords;\r\n          this.setState({\r\n            currentLocation: {\r\n              lat: coords.latitude,\r\n              lng: coords.longitude,\r\n            },\r\n          });\r\n        });\r\n      }\r\n    }\r\n    this.loadMap();\r\n  }\r\n\r\n  loadMap() {\r\n    if (this.props && this.props.google) {\r\n      // checks if google is available\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n\r\n      const mapRef = this.refs.map1;\r\n\r\n      // reference to the actual DOM element\r\n      const node = ReactDOM.findDOMNode(mapRef);\r\n\r\n      let { zoom } = this.props;\r\n      const { lat, lng } = this.state.currentLocation;\r\n      const center = new maps.LatLng(lat, lng);\r\n\r\n      const mapConfig = Object.assign(\r\n        {},\r\n        {\r\n          center: center,\r\n          zoom: zoom,\r\n        }\r\n      );\r\n\r\n      // maps.Map() is constructor that instantiates the map\r\n      this.map1 = new maps.Map(node, mapConfig);\r\n    }\r\n  }\r\n\r\n  renderChildren() {\r\n    const { children } = this.props;\r\n\r\n    if (!children) return;\r\n\r\n    return React.Children.map1(children, (c) => {\r\n      if (!c) return;\r\n\r\n      return React.cloneElement(c, {\r\n        map1: this.map1,\r\n        google: this.props.google,\r\n        mapCenter: this.state.currentLocation,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const style = Object.assign({}, mapStyles.map1);\r\n\r\n    return (\r\n      <div>\r\n        <div style={style} ref=\"map1\">\r\n          Loading map...\r\n        </div>\r\n        {this.renderChildren()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCurrentLocation.defaultProps = {\r\n  zoom: 14,\r\n  //   initialCenter: {\r\n  //     lat: 0,\r\n  //     lng: 0,\r\n  //   },\r\n  centerAroundCurrentLocation: false,\r\n  visible: true,\r\n};\r\n\r\nexport default CurrentLocation;\r\n","import React, { Component, useState } from \"react\";\r\nimport {\r\n  GoogleApiWrapper,\r\n  InfoWindow,\r\n  Marker,\r\n  Circle,\r\n  Map,\r\n} from \"google-maps-react\";\r\n\r\nimport CurrentLocation from \"./Map\";\r\n\r\n// <ul>\r\n//   {places && places.map((p) => <li key={p.id}>{p.name}</li>)}</ul>)\r\n\r\nfunction Listing({ places }) {\r\n  const [activeMarker, setActiveMarker] = useState({});\r\n  const [selectedPlace, setSelectedPlace] = useState({});\r\n  const [showingInfoWindow, setShowingInfoWindow] = useState(false);\r\n\r\n  function onMarkerClick(props, marker, e) {\r\n    setShowingInfoWindow(true);\r\n    setSelectedPlace(props);\r\n    setActiveMarker(marker);\r\n  }\r\n\r\n  function onClose(props) {\r\n    if (showingInfoWindow) {\r\n      setShowingInfoWindow(false);\r\n      setActiveMarker(null);\r\n    }\r\n  }\r\n  console.log(places);\r\n  return (\r\n    <div>\r\n      {places &&\r\n        places.map((p) => {\r\n          <div>\r\n            <Marker onClick={onMarkerClick} name={p.name} />\r\n            <InfoWindow\r\n              marker={activeMarker}\r\n              visible={showingInfoWindow}\r\n              onClose={onClose}\r\n            >\r\n              <div>\r\n                <h4>{selectedPlace.name}</h4>\r\n              </div>\r\n            </InfoWindow>\r\n          </div>;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport class MapContainer extends Component {\r\n  state = {\r\n    showingInfoWindow: false,\r\n    activeMarker: {},\r\n    selectedPlace: {},\r\n    places: [],\r\n    count: 0,\r\n    type: \"hospital\",\r\n  };\r\n\r\n  onMapReady = (mapProps, map) => this.searchNearby(map, map.center);\r\n\r\n  searchNearby = (map, center) => {\r\n    const { google } = this.props;\r\n\r\n    const service = new google.maps.places.PlacesService(map);\r\n\r\n    // Specify location, radius and place types for your Places API search.\r\n    const request = {\r\n      location: center,\r\n      radius: \"5000\",\r\n      type: this.state.type,\r\n    };\r\n\r\n    service.nearbySearch(request, (results, status) => {\r\n      if (status === google.maps.places.PlacesServiceStatus.OK)\r\n        this.setState({ places: results });\r\n    });\r\n  };\r\n\r\n  onMarkerClick = (props, marker, e) => {\r\n    // console.log(props);\r\n    // console.log(marker);\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n    });\r\n  };\r\n\r\n  onClose = (props) => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  renderType(type) {\r\n    const coords = { lat: this.props.lat, lng: this.props.lng };\r\n    if (!this.props.loaded) return <div>Loading...</div>;\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        initialCenter={coords}\r\n        onReady={this.onMapReady}\r\n        zoom={12}\r\n      >\r\n        <Circle\r\n          radius={5000}\r\n          center={coords}\r\n          //   onMouseover={() => console.log(\"mouseover\")}\r\n          onClick={() => {\r\n            console.log(\"clikced\");\r\n            if (type === 0) {\r\n              console.log(\"hospital\");\r\n              return this.setState({\r\n                count: 1,\r\n                type: \"hospital\",\r\n              });\r\n            }\r\n\r\n            if (type === 1) {\r\n              console.log(\"police\");\r\n              return this.setState({\r\n                count: 2,\r\n                type: \"police\",\r\n              });\r\n            }\r\n            if (type === 2) {\r\n              console.log(\"current\");\r\n              return this.setState({\r\n                count: 0,\r\n              });\r\n            }\r\n          }}\r\n          //   onMouseout={() => console.log(\"mouseout\")}\r\n          strokeColor=\"transparent\"\r\n          strokeOpacity={0}\r\n          strokeWeight={5}\r\n          fillColor=\"#FF0000\"\r\n          fillOpacity={0.2}\r\n        />\r\n\r\n        {this.state.count === 1 &&\r\n          this.state.places &&\r\n          this.state.places.map((p) => {\r\n            return (\r\n              <Marker\r\n                onMouseover={this.onMarkerClick}\r\n                onMouseout={this.onClose}\r\n                name={p.name}\r\n                position={p.geometry.location}\r\n              />\r\n            );\r\n          })}\r\n        {this.state.count === 2 &&\r\n          this.state.places &&\r\n          this.state.places.map((p) => {\r\n            return (\r\n              <Marker\r\n                onMouseover={this.onMarkerClick}\r\n                onMouseout={this.onClose}\r\n                name={p.name}\r\n                position={p.geometry.location}\r\n              />\r\n            );\r\n          })}\r\n        {/* {console.log(this.state.places)} */}\r\n\r\n        {this.state.count === 0 && (\r\n          <Marker\r\n            onMouseover={this.onMarkerClick}\r\n            name={\"Current Location\"}\r\n            onMouseout={this.onClose}\r\n          />\r\n        )}\r\n        <InfoWindow\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showingInfoWindow}\r\n          onClick={this.onClose}\r\n        >\r\n          <div>\r\n            <h4>{this.state.selectedPlace.name}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.count === 0 && this.renderType(0)}\r\n        {this.state.count === 1 && this.renderType(1)}\r\n        {this.state.count === 2 && this.renderType(2)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyA6hz3_zGUdW-B6RrjX1zi2nKVfM9sRyjg\",\r\n})(MapContainer);\r\n","import React from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\n// import { ItemTypes } from \"./Constants\";\r\n\r\n/**\r\n * Your Component\r\n */\r\n\r\nfunction UTSCard({ id, name }) {\r\n  const [{ isDragging }, dragRef] = useDrag({\r\n    type: \"uts\",\r\n    item: { id, name },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div className=\"pet-card p-4 border-2 rounded-lg\" ref={dragRef}>\r\n      {name}\r\n      {isDragging && \"🤗\"}\r\n    </div>\r\n  );\r\n}\r\nexport default UTSCard;\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport UTSData from \"../data/uts.json\";\r\nimport { GetUTSContext } from \"../Context/GetUTSContext\";\r\nimport { MaxInputContext } from \"../Context/MaxInputContext\";\r\n\r\nexport default function UTS(props) {\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [disputationTitle, setDisputationTitle] = useState(\"\");\r\n  const [disputationQ, setDisputationQ] = useState(\"\");\r\n  const { getUTS, setGetUTS } = useContext(GetUTSContext);\r\n  const { maxInput, setMaxInput } = useContext(MaxInputContext);\r\n\r\n  const onMouseEnter = () => {\r\n    setIsHovering(true);\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHovering(false);\r\n  };\r\n\r\n  const HoverText = () => {\r\n    return (\r\n      <div\r\n        className={\r\n          title === \"Unhelpful Thinking Styles\"\r\n            ? \"fixed left-0 bottom-[50px] h-[400px]  w-[1350px]  \"\r\n            : \"fixed left-0 bottom-[100px] h-[300px]  w-[1350px]  \"\r\n        }\r\n      >\r\n        <div className=\"h-full flex flex-col w-full pl-[24px]\">\r\n          {/* header */}\r\n          <div className=\"w-full rounded-t-[10px] text-[20px]  p-[10px]  text-white text-center self-center bg-[#5DCFFF] font-semibold shadow-lg border-t-2 border-r-2 border-l-2\">\r\n            <p>{title} Description</p>\r\n          </div>\r\n          {/* body */}\r\n          <div className=\"w-full h-[400px] rounded-b-[10px] text-[16px]  p-[40px] px-[200px]  self-center bg-white  grid shadow-lg\">\r\n            <p className=\"text-justify \">{description}</p>\r\n            {title != \"Unhelpful Thinking Styles\" ? (\r\n              <div className=\"space-y-0 \">\r\n                <p className=\"text-left text-[20px] \">Disputation Questions</p>\r\n                <p className=\"text-left pl-12\">\r\n                  <p className=\"\">{disputationTitle}</p>\r\n                  {disputationQ.map((item, i) => {\r\n                    if (i != 0) {\r\n                      return (\r\n                        <p className=\" pl-12\">\r\n                          {\" - \"}\r\n                          {item}\r\n                        </p>\r\n                      );\r\n                    }\r\n                  })}\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          {/* {UTSList()} */}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // function UTSList() {\r\n  //   return <div>{console.log(UTSData.UTS_Description)}</div>;\r\n  //   // UTSData.map(())\r\n  // }\r\n\r\n  return (\r\n    <div className=\"left-0 bottom-0 fixed  w-[1350px] \">\r\n      <div className=\"h-full flex flex-col w-full pl-[24px]\">\r\n        {/* body */}\r\n        <div className=\"w-full h-[50px] border-t-2 rounded-t-[10px] text-[14px]  p-[18px] px-[10px]  self-center bg-white bg-opacity-[0.80]  shadow-lg grid grid-cols-6 text-center select-none\">\r\n          {UTSData.Types.map((item, i) => {\r\n            if (i <= 5) {\r\n              return (\r\n                <p\r\n                  onMouseEnter={() => {\r\n                    setTitle(item.title);\r\n                    setDescription(item.Description);\r\n                    setDisputationTitle(item.DisputationQ[0]);\r\n                    setDisputationQ(item.DisputationQ);\r\n                    onMouseEnter();\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTitle(\"\");\r\n                    setDescription(\"\");\r\n                    setDisputationTitle(\"\");\r\n                    setDisputationQ(\"\");\r\n                    // setGetUTS(\"\");\r\n                    onMouseLeave();\r\n                  }}\r\n                  onClick={() => {\r\n                    if (props.getUTSBool) {\r\n                      props._handleUTSClick(item.title);\r\n                      setGetUTS(item.title);\r\n                      // props.df_text_query(item.title, false, \"bot\");\r\n                    }\r\n                    // console.log(cookies.get(\"getUTS\"));\r\n                    console.log(getUTS);\r\n                  }}\r\n                  className=\" cursor-pointer hover:bg-gray hover:border-2 rounded-lg text-blue-900 font-semibold\"\r\n                >\r\n                  {item.title}\r\n                </p>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n        {/* header */}\r\n        <div className=\"w-full rounded-b-[10px] text-[14px] h-[50px] p-[10px]  text-white text-center self-center bg-[#5DCFFF] font-semibold shadow-lg grid grid-cols-5 select-none\">\r\n          {UTSData.Types.map((item, i) => {\r\n            if (i === 8) {\r\n              return (\r\n                <div className=\"col-span-2 grid grid-cols-2\">\r\n                  <p\r\n                    onMouseEnter={() => {\r\n                      setTitle(\"Unhelpful Thinking Styles\");\r\n                      setDescription(UTSData.UTS_Description);\r\n                      onMouseEnter();\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTitle(\"\");\r\n                      setDescription(\"\");\r\n                      onMouseLeave();\r\n                    }}\r\n                    className=\"text-[18px] cursor-pointer hover:bg-gray hover:border-2 rounded-lg\"\r\n                  >\r\n                    Unhelpful Thinking Styles{\" \"}\r\n                  </p>\r\n                  <p\r\n                    onMouseEnter={() => {\r\n                      setTitle(item.title);\r\n                      setDescription(item.Description);\r\n                      setDisputationTitle(item.DisputationQ[0]);\r\n                      setDisputationQ(item.DisputationQ);\r\n                      onMouseEnter();\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                      setTitle(\"\");\r\n                      setDescription(\"\");\r\n                      setDisputationTitle(\"\");\r\n                      setDisputationQ(\"\");\r\n                      // setGetUTS(\"\");\r\n                      onMouseLeave();\r\n                    }}\r\n                    onClick={(e) => {\r\n                      if (props.getUTSBool) {\r\n                        props._handleUTSClick(item.title);\r\n                        setGetUTS(item.title);\r\n                      }\r\n                      console.log(getUTS);\r\n                    }}\r\n                    className=\"cursor-pointer hover:bg-gray hover:border-2 rounded-lg\"\r\n                  >\r\n                    {item.title}\r\n                  </p>\r\n                </div>\r\n              );\r\n            }\r\n            if (i >= 6) {\r\n              return (\r\n                <p\r\n                  onMouseEnter={() => {\r\n                    setTitle(item.title);\r\n                    setDescription(item.Description);\r\n                    setDisputationTitle(item.DisputationQ[0]);\r\n                    setDisputationQ(item.DisputationQ);\r\n                    onMouseEnter();\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTitle(\"\");\r\n                    setDescription(\"\");\r\n                    setDisputationTitle(\"\");\r\n                    setDisputationQ(\"\");\r\n                    // setGetUTS(\"\");\r\n                    onMouseLeave();\r\n                  }}\r\n                  onClick={(e) => {\r\n                    if (props.getUTSBool) {\r\n                      props._handleUTSClick(item.title);\r\n                      setGetUTS(item.title);\r\n                      console.log(getUTS);\r\n                    }\r\n                  }}\r\n                  className=\" cursor-pointer hover:bg-gray hover:border-2 rounded-lg\"\r\n                >\r\n                  {item.title}\r\n                </p>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n        {isHovering && HoverText()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport axios from \"axios/index\";\r\nimport Message from \"./Message\";\r\nimport Card from \"./Card\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport QuickReplies from \"./QuickReplies\";\r\nimport MultipleChoice from \"./MultipleChoice\";\r\nimport GetMoods from \"./GetMoods/GetMoods\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"../../styles/chatbot.css\";\r\nimport { ThoughtDiaryContext } from \"../../Context/ThoughtDiaryContext\";\r\nimport { GetAdverseAnswerContext } from \"../../Context/GetAdverseAnswerContext\";\r\nimport { GetHotEmotionCAnswerContext } from \"../../Context/GetHotEmotionCAnswerContext.js\";\r\nimport { GetOtherEmotionCAnswerContext } from \"../../Context/GetOtherEmotionCAnswerContext.js\";\r\nimport { ShowMoodsContext } from \"../../Context/ShowMoodsContext\";\r\nimport { ShowChatBox } from \"../../Context/ShowChatBox\";\r\nimport { ThoughtDiaryFocusContext } from \"../../Context/ThoughtDiaryFocusContext\";\r\nimport { MaxInputContext } from \"../../Context/MaxInputContext\";\r\nimport { GetOtherEmotionAllContext } from \"../../Context/GetOtherEmotionAllContext\";\r\nimport { HotEmotionRateContext } from \"../../Context/HotEmotionRateContext\";\r\nimport { GetHotThoughtBContext } from \"../../Context/GetHotThoughtBContext\";\r\nimport { GetOtherThoughtBContext } from \"../../Context/GetOtherThoughtBContext\";\r\nimport { ShowUTSContext } from \"../../Context/ShowUTSContext\";\r\nimport { GetUTSContext } from \"../../Context/GetUTSContext\";\r\nimport { GetUTSContainerContext } from \"../../Context/GetUTSContainerContext\";\r\nimport { HotThoughtRateContext } from \"../../Context/HotThoughtRateContext\";\r\nimport { GetForEvidenceDContext } from \"../../Context/GetForEvidenceDContext\";\r\nimport { GetAgainstEvidenceDContext } from \"../../Context/GetAgainstEvidenceDContext\";\r\nimport useGeoLocation from \"../../hooks/useGeolocation\";\r\nimport { GetLocationContext } from \"../../Context/GetLocationContext\";\r\nimport MapContainer from \"./MapContainer\";\r\nimport ModalLogin from \"../ModalLogin\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport UTSCard from \"./UTSCard\";\r\nimport UTS from \"../UTS\";\r\nimport { Textfit } from \"react-textfit\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nfunction Chatbot(props) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [showBot, setShowBot] = useState(true);\r\n  const [shopWelcomeSent, setShopWelcomeSent] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalLogin, setShowModalLogin] = useState(false);\r\n  const [claimCode, setClaimCode] = useState(false);\r\n  const [correctCode, setCorrectCode] = useState(false);\r\n  const [assessmentScore, setAssessmentScore] = useState();\r\n  // const { showMoods, setShowMoods } = useContext(ShowMoodsContext);\r\n  const { showChatBox, setShowChatBox } = useContext(ShowChatBox);\r\n  const { maxInput, setMaxInput } = useContext(MaxInputContext);\r\n  const { focusThoughtDiaryLetter, setFocusThoughtDiaryLetter } = useContext(\r\n    ThoughtDiaryFocusContext\r\n  );\r\n  const { getLocation, setGetLocation } = useContext(GetLocationContext);\r\n  const location = useGeoLocation();\r\n  const [quickRepliesWelcome, setQuickRepliesWelcome] = useState(true);\r\n\r\n  // Step 1: Start by getting the mood\r\n  const [selectedMoods, setSelectedMoods] = useState([]);\r\n  const [getMoodStep1, setGetMoodStep1] = useState(false);\r\n  const [getMoodWhenStartedStep1, setGetMoodWhenStartedStep1] = useState(\"\");\r\n\r\n  // Step 2: Intro or Not Intro Thought Diary\r\n  const { showThoughtDiaryTool, setShowThoughtDiaryTool } =\r\n    useContext(ThoughtDiaryContext);\r\n  // const [showThoughtDiaryTool, setShowThoughtDiaryTool] = useState(false);\r\n\r\n  // Step 3: Get A) the Adverse part\r\n  const [activateGetAdverseStep3, setActivateGetAdverseStep3] = useState(0);\r\n  const { getAdverseStep3, setGetAdverseStep3 } = useContext(\r\n    GetAdverseAnswerContext\r\n  );\r\n  const [getAdverseStep3UseState, setGetAdverseStep3UseState] = useState(null);\r\n\r\n  // Step 4: Get C) the Consequences part\r\n  const [getMoodHot, setGetMoodHot] = useState(false);\r\n  const [getMoodOther, setGetMoodOther] = useState(false);\r\n  const [getAfterFeelings, setGetAfterFeelings] = useState(false);\r\n  const [getAfterFeelingsChat, setGetAfterFeelingsChat] = useState(\"\");\r\n\r\n  const { getHotEmotionCAnswer, setGetHotEmotionCAnswer } = useContext(\r\n    GetHotEmotionCAnswerContext\r\n  );\r\n  const { getOtherEmotionCAnswer, setGetOtherEmotionCAnswer } = useContext(\r\n    GetOtherEmotionCAnswerContext\r\n  );\r\n  const [showMoodsHot, setShowMoodsHot] = useState(false);\r\n  const [showMoodsOther, setShowMoodsOther] = useState(false);\r\n  const { getOtherEmotionAll, setGetOtherEmotionAll } = useContext(\r\n    GetOtherEmotionAllContext\r\n  );\r\n  const [getRateEmotion, setGetRateEmotion] = useState(false);\r\n  const { getHotEmotionRate, setGetHotEmotionRate } = useContext(\r\n    HotEmotionRateContext\r\n  );\r\n\r\n  // Step 5: Get B)\r\n  const [getOtherThoughtBool, setGetOtherThoughtBool] = useState(false);\r\n  const { getHotThoughtB, setGetHotThoughtB } = useContext(\r\n    GetHotThoughtBContext\r\n  );\r\n  const { getOtherThoughtB, setGetOtherThoughtB } = useContext(\r\n    GetOtherThoughtBContext\r\n  );\r\n\r\n  // Step 5: Give UTS\r\n  const { showUTS, setShowUTS } = useContext(ShowUTSContext);\r\n  const [getUTSBool, setGetUTSBool] = useState(false);\r\n  const [getUTSThoughtBool, setGetUTSThoughtBool] = useState(true);\r\n  const [getUTSState, setGetUTSState] = useState(\"\");\r\n  const { getUTS, setGetUTS } = useContext(GetUTSContext);\r\n  const [getUTSContainerState, setGetUTSCointainerState] = useState([]);\r\n  const { getUTSContainer, setGetUTSCointainer } = useContext(\r\n    GetUTSContainerContext\r\n  );\r\n  const [getRateThought, setGetRateThought] = useState(false);\r\n\r\n  // Step 5: Get Hot Thought\r\n  const [getHotThoughtBool, setGetHotThoughtBool] = useState(true);\r\n  const { getHotThoughtRate, setGetHotThoughtRate } = useContext(\r\n    HotThoughtRateContext\r\n  );\r\n\r\n  // Step 6: Explain D\r\n  const [getExplainDBool, setGetExplainDBool] = useState(false);\r\n  const { getForEvidenceD, setGetForEvidenceD } = useContext(\r\n    GetForEvidenceDContext\r\n  );\r\n  const { getAgainstEvidenceD, setGetAgainstEvidenceD } = useContext(\r\n    GetAgainstEvidenceDContext\r\n  );\r\n\r\n  let messagesEnd = useRef(null);\r\n  let talkInput = useRef(null);\r\n\r\n  if (cookies.get(\"userID\") === undefined) {\r\n    cookies.set(\"userID\", uuid(), { path: \"/\" });\r\n  }\r\n\r\n  async function df_text_query(queryText, dfQuery, speaker, extra) {\r\n    console.log(speaker);\r\n    if (speaker === undefined) speaker = \"user\";\r\n    let says = \"\";\r\n    if (extra === \"map\") {\r\n      says = {\r\n        // speaks: \"user\",\r\n        speaks: speaker,\r\n        msg: {\r\n          map: {\r\n            text: queryText,\r\n            latitude: location.coordinates.lat,\r\n            longitude: location.coordinates.lng,\r\n            key: \"AIzaSyA6hz3_zGUdW-B6RrjX1zi2nKVfM9sRyjg\",\r\n          },\r\n        },\r\n      };\r\n\r\n      // My Key\r\n      // AIzaSyA6hz3_zGUdW-B6RrjX1zi2nKVfM9sRyjg\r\n\r\n      // Free Key\r\n      // AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo\r\n    } else {\r\n      says = {\r\n        // speaks: \"user\",\r\n        speaks: speaker,\r\n        msg: {\r\n          text: {\r\n            text: queryText,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    // let says = {\r\n    //   // speaks: \"user\",\r\n    //   speaks: speaker,\r\n    //   msg: {\r\n    //     text: {\r\n    //       text: queryText,\r\n    //     },\r\n    //   },\r\n    // };\r\n\r\n    setMessages((prevMessages) => {\r\n      return [...prevMessages, says];\r\n    });\r\n\r\n    if (dfQuery) {\r\n      const res = await axios.post(\"/api/df_text_query\", {\r\n        text: queryText,\r\n        userID: cookies.get(\"userID\"),\r\n      });\r\n\r\n      for (let msg of res.data.fulfillmentMessages) {\r\n        says = {\r\n          speaks: \"bot\",\r\n          msg: msg,\r\n        };\r\n\r\n        setMessages((prevMessages) => {\r\n          return [...prevMessages, says];\r\n        });\r\n      }\r\n    }\r\n\r\n    console.log(messages);\r\n  }\r\n\r\n  async function df_event_query(eventName) {\r\n    // const res = await axios.post(\"/api/df_event_query\", { event });\r\n    const res = await axios.post(\"/api/df_event_query\", {\r\n      event: eventName,\r\n      userID: cookies.get(\"userID\"),\r\n    });\r\n    // console.log(res);\r\n    for (let msg of res.data.fulfillmentMessages) {\r\n      let says = {\r\n        speaks: \"bot\",\r\n        msg: msg,\r\n      };\r\n\r\n      // Version 1\r\n      setMessages((prevMessages) => {\r\n        return [...prevMessages, says];\r\n      });\r\n\r\n      // Version 2\r\n      // setMessages([...messages, says]);\r\n\r\n      // Version 3\r\n      // setMessages(...messages, says);\r\n    }\r\n  }\r\n  useEffect(async () => {\r\n    console.log(location);\r\n\r\n    if (location.loaded) {\r\n      if (location.error) {\r\n        if (location.error.code === 1) {\r\n          df_text_query(\r\n            `Please allow use location, go and follow this site. Refresh this page after Thank you!\r\n            \r\n            https://support.google.com/chrome/answer/142065?hl=en.`,\r\n            false,\r\n            \"bot\"\r\n          );\r\n        }\r\n      }\r\n      if (location.coordinates) {\r\n        if (maxInput === 0) {\r\n          if (cookies.get(\"termsAndConditions\")) {\r\n            df_text_query(\r\n              `Thank you for granting us access to your location!`,\r\n              false,\r\n              \"bot\"\r\n              // \"map\"\r\n            );\r\n          } else {\r\n            df_text_query(\r\n              `Thank you for granting us access to your location! Please read the terms and conditions above!`,\r\n              false,\r\n              \"bot\"\r\n              // \"map\"\r\n            );\r\n          }\r\n          // df_text_query(\r\n          //   `Change to your current location, a nearby police station, or a nearby hospital by clicking the red circle!`,\r\n          //   false,\r\n          //   \"bot\"\r\n          // );\r\n          setMaxInput(maxInput + 1);\r\n        }\r\n\r\n        // if (cookies.get(\"termsAndConditions\")) {\r\n        if (getLocation && cookies.get(\"termsAndConditions\")) {\r\n          setMaxInput(0);\r\n          df_event_query(\"Welcome\");\r\n          console.log(maxInput);\r\n        }\r\n        // console.log(location);\r\n      }\r\n    }\r\n    await resolveAfterXSeconds(5);\r\n\r\n    // if (window.location.pathname === \"/\" && !welcomeSent) {\r\n\r\n    //   df_event_query(\"Welcome\");\r\n    //   setWelcomeSent(true);\r\n    // }\r\n\r\n    // props.history.listen(() => {\r\n    //   if (props.history.location.pathname === \"/\" && !welcomeSent) {\r\n    //     df_event_query(\"Welcome\");\r\n    //     setWelcomeSent(true);\r\n    //   }\r\n    // });\r\n\r\n    // if (window.location.pathname === \"/about\" && !shopWelcomeSent) {\r\n    //   await resolveAfterXSeconds(1);\r\n    //   df_event_query(\"WELCOME_SHOP\");\r\n    //   setShowBot(true);\r\n    //   setShopWelcomeSent(true);\r\n    // }\r\n\r\n    props.history.listen(() => {\r\n      if (props.history.location.pathname === \"/about\" && !shopWelcomeSent) {\r\n        df_event_query(\"WELCOME_SHOP\");\r\n        setShowBot(true);\r\n        setShopWelcomeSent(true);\r\n      }\r\n    });\r\n  }, [location, getLocation, cookies.get(\"termsAndConditions\")]);\r\n\r\n  function show(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setShowBot(true);\r\n  }\r\n\r\n  function hide(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setShowBot(false);\r\n  }\r\n\r\n  function claim_code(input) {\r\n    const code = \"123\";\r\n    console.log(input);\r\n\r\n    if (input === code) {\r\n      console.log(\"correct code\");\r\n      // df_text_query(\"I have a code\");\r\n      setCorrectCode(true);\r\n    } else {\r\n      console.log(\"wrong code\");\r\n      // df_text_query(\"I have a code\");\r\n      setCorrectCode(false);\r\n    }\r\n  }\r\n\r\n  function _handleInputKeyPress(e) {\r\n    if (e.key === \"Enter\") {\r\n      if (claimCode) {\r\n        claim_code(e.target.value);\r\n      } else if (activateGetAdverseStep3 === 1) {\r\n        // _handleGetAdverseStep3(e);\r\n        setGetAdverseStep3UseState(e.target.value);\r\n        setActivateGetAdverseStep3(2);\r\n        setShowChatBox(false);\r\n        // console.log(getAdverseStep3);\r\n      } else if (getMoodOther) {\r\n        if (e.target.value !== \"\") {\r\n          df_text_query(e.target.value, false);\r\n          let chat = e.target.value;\r\n          setGetOtherEmotionAll((prevChats) => {\r\n            return [...prevChats, chat];\r\n          });\r\n          setMaxInput(maxInput + 1);\r\n          // console.log(messages[messages.length - 1]);\r\n          // console.log(getOtherEmotionCAnswerChatB, \"othes\");\r\n\r\n          // combining chatbox & emotions\r\n          if (maxInput === 4) {\r\n            setShowChatBox(true);\r\n            setGetMoodOther(false);\r\n            setMaxInput(0);\r\n            df_event_query(\"ABC_THOUGHT_DIARY_C_AFTER_MOODS\");\r\n          }\r\n          // console.log(getOtherEmotionAll, \"just the two of us\");\r\n\r\n          // console.log(getMoodAfterFeelngs);\r\n          // setGetMoodFeelings(true);\r\n        } else {\r\n          df_text_query(\"Please put anything in the chatbox\", false, \"bot\");\r\n        }\r\n      } else if (getRateEmotion) {\r\n        let chat = e.target.value;\r\n        if (e.target.value !== \"\") {\r\n          if (parseInt(chat) != NaN) {\r\n            chat = parseInt(chat);\r\n            if (chat <= 0 || chat > 10) {\r\n              df_text_query(\"Please put a number between (1-10)\", false, \"bot\");\r\n            } else {\r\n              if (chat > 0 && chat < 6) {\r\n                df_text_query(chat, false);\r\n                df_text_query(\r\n                  `Okay, that wasn't so strong. However, you mentioned experiencing these things that affected you.\r\n                  '${_handleMoods(getHotEmotionCAnswer)}' and\r\n                '${_handleShowList(getOtherEmotionAll)}'`,\r\n                  false,\r\n                  \"bot\"\r\n                );\r\n              }\r\n              if (chat > 5 && chat <= 10) {\r\n                df_text_query(chat, false);\r\n                df_text_query(\r\n                  `Okay, that's pretty strong. It's not surprising that you've noticed that these things affected you. \r\n                  \r\n                  '${_handleMoods(\r\n                    getHotEmotionCAnswer\r\n                  )}' and '${_handleShowList(getOtherEmotionAll)}'`,\r\n                  false,\r\n                  \"bot\"\r\n                );\r\n              }\r\n              df_text_query(\r\n                `Okay, so now we kind of have an idea that this is what happened. '${getAdverseStep3}'. This is the time and place you noticed the change in your mood. `,\r\n                false,\r\n                \"bot\"\r\n              );\r\n              df_text_query(\r\n                `And these are the emotions you noticed. '${_handleMoods(\r\n                  getHotEmotionCAnswer\r\n                )}' and\r\n                '${_handleShowList(\r\n                  getOtherEmotionAll\r\n                )}'. And you mentioned that you're still feeling some of them now `,\r\n                false,\r\n                \"bot\"\r\n              );\r\n\r\n              df_text_query(\r\n                `Okay, so what was on your mind if we could go back '${getMoodWhenStartedStep1}' to the time and place when you said: '${getAdverseStep3}'.`,\r\n                false,\r\n                \"bot\"\r\n              );\r\n\r\n              df_text_query(\r\n                `Answer the question \"What was going through my head at the time?`,\r\n                false,\r\n                \"bot\"\r\n              );\r\n\r\n              setGetRateEmotion(false);\r\n              setGetAfterFeelings(false);\r\n              setGetOtherThoughtBool(true);\r\n              setShowChatBox(true);\r\n              setGetHotEmotionRate(chat);\r\n              setFocusThoughtDiaryLetter(\"a_b\");\r\n            }\r\n            console.log(chat);\r\n          }\r\n        } else {\r\n          df_text_query(\"Please put anything in the chatbox\", false, \"bot\");\r\n        }\r\n      } else if (getAfterFeelings) {\r\n        let chat = e.target.value;\r\n        if (e.target.value !== \"\") {\r\n          setGetAfterFeelingsChat(chat);\r\n          setGetRateEmotion(true);\r\n          df_event_query(\"ABC_THOUGHT_DIARY_C_RATE_EMOTION\");\r\n          df_text_query(chat, false);\r\n        } else {\r\n          df_text_query(\"Please put anything in the chatbox\", false, \"bot\");\r\n        }\r\n\r\n        // console.log(getAfterFeelingsChat);\r\n        // setGetRateEmotion(true);\r\n        // setShowChatBox(false);\r\n        // df_event_query(\"ABC_THOUGHT_DIARY_C_RATE_EMOTION\");\r\n      } else if (getOtherThoughtBool) {\r\n        let chat = e.target.value;\r\n        if (e.target.value !== \"\") {\r\n          if (maxInput === 0) {\r\n            setShowChatBox(true);\r\n            df_text_query(chat, false);\r\n            df_text_query(\r\n              `Are you starting to get a feeling now for why that '${_handleMoods(\r\n                getHotEmotionCAnswer\r\n              )}' kind of feeling might have been so ${\r\n                getHotEmotionRate > 5 ? \"Strong\" : \"Slightly Strong\"\r\n              }. It's quite a good match if we look at B) and C)`,\r\n              false,\r\n              \"bot\"\r\n            );\r\n\r\n            setFocusThoughtDiaryLetter(\"b_c\");\r\n            df_text_query(\r\n              `Is there any other thoughts that you have? if we could go back \"recently\" to the time and place when you said: ${getAdverseStep3}`,\r\n              false,\r\n              \"bot\"\r\n            );\r\n\r\n            setMaxInput(2);\r\n          }\r\n\r\n          if (maxInput === 2) {\r\n            df_text_query(chat, false);\r\n            df_text_query(\r\n              `Okay, given that you think that way, when we look at the C) column, it's kind of a match for you that you couldn't figure out why you were feeling that way.`,\r\n              false,\r\n              \"bot\"\r\n            );\r\n            df_text_query(\r\n              `Give me 2 more of your thoughts during that time.`,\r\n              false,\r\n              \"bot\"\r\n            );\r\n\r\n            setFocusThoughtDiaryLetter(\"b_c\");\r\n            setMaxInput(3);\r\n          }\r\n          if (maxInput === 3) {\r\n            df_text_query(chat, false);\r\n            df_text_query(\r\n              `Was there any other thoughts that you noticed at the time?\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n\r\n            setFocusThoughtDiaryLetter(\"b\");\r\n            setMaxInput(4);\r\n          }\r\n\r\n          if (maxInput === 4) {\r\n            df_text_query(chat, false);\r\n            df_text_query(\r\n              `Okay wow, that's a lot of things. And looking at that I'm thinking there's quite a few things that it might be really helpful for us to have a bit of a look at.\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n            df_text_query(\r\n              `Um, because if these things were true: '${_handleShowList(\r\n                getOtherThoughtB\r\n              )}'\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n            df_text_query(\r\n              `then we'd really have a problem, like it would require a professional to kind of focus on fixing that problem.\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n            df_text_query(\r\n              `But I'm wondering whether some of these thoughts could be a reflection of your true problem; they could be the one component that, although not exactly accurate, are a component of your true problem.\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n            df_text_query(\r\n              `And if that's true we might be able to adjust them or think a little differently about the situation and hopefully feel a bit differently as a result.\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n\r\n            setGetOtherThoughtBool(false);\r\n            setShowChatBox(false);\r\n            setFocusThoughtDiaryLetter(\"b\");\r\n            df_event_query(\"ABC_THOUGHT_DIARY_B\");\r\n          }\r\n\r\n          // console.log(maxInput, \"count\", getOtherThoughtB.length, \"lengt8h\");\r\n          setGetOtherThoughtB((prevChats) => {\r\n            return [...prevChats, chat];\r\n          });\r\n        } else {\r\n          df_text_query(\"Please put anything in the chatbox\", false, \"bot\");\r\n        }\r\n      } else if (getRateThought) {\r\n        let chat = e.target.value;\r\n        // console.log(getUTS.length);\r\n        if (e.target.value !== \"\") {\r\n          if (parseInt(chat) != NaN) {\r\n            chat = parseInt(chat);\r\n            df_text_query(chat, false, \"user\");\r\n            if (chat <= 0 || chat > 100) {\r\n              df_text_query(\r\n                \"Please put a number between (1-100)\",\r\n                false,\r\n                \"bot\"\r\n              );\r\n            } else {\r\n              if (chat > 0 && chat < 51) {\r\n                df_text_query(\r\n                  `Woah, okay so you're believing this slight strongly. `,\r\n                  false,\r\n                  \"bot\"\r\n                );\r\n                df_text_query(\r\n                  `Okay let's do it again. I'd like you to give me a thought that is most likely related to your emotions. That is, the one thought that makes you feel worse, as stated in the C) column. One that's most distressing for you.`,\r\n                  false,\r\n                  \"bot\"\r\n                );\r\n                setFocusThoughtDiaryLetter(\"b_c\");\r\n                df_event_query(\"ABC_THOUGHT_DIARY_GET_HOT_THOUGHT\");\r\n              }\r\n            }\r\n            if (chat > 50 && chat <= 100) {\r\n              setGetHotThoughtRate(chat);\r\n              df_text_query(\r\n                `Woah, okay so you're believing this strongly. `,\r\n                false,\r\n                \"bot\"\r\n              );\r\n              df_text_query(\r\n                `I believe your feelings in C) would be different if you were able to believe this \"hot thought\" lesser than 50. You would have felt a little better than what you mentioned in the C) column.`,\r\n                false,\r\n                \"bot\"\r\n              );\r\n              df_text_query(\r\n                `That is why when I see you've rated it as ${chat}% percent then I knew it was the one that is most likely connected with your emotions.`,\r\n                false,\r\n                \"bot\"\r\n              );\r\n              setGetRateThought(false);\r\n              setGetExplainDBool(true);\r\n              df_event_query(\"ABC_THOUGHT_EXPLAIN_D\");\r\n              setFocusThoughtDiaryLetter(\"b_c\");\r\n              setShowChatBox(false);\r\n\r\n              setMaxInput(0);\r\n            }\r\n            console.log(chat);\r\n          }\r\n        } else {\r\n          df_text_query(\"Please put anything in the chatbox\", false, \"bot\");\r\n        }\r\n      } else if (getExplainDBool) {\r\n        let chat = e.target.value;\r\n        // console.log(getUTS.length);\r\n\r\n        if (e.target.value !== \"\") {\r\n          df_text_query(chat, false, \"user\");\r\n          setShowChatBox(false);\r\n          if (maxInput === 2) {\r\n            if (getForEvidenceD.length === 0) {\r\n              setGetForEvidenceD([chat]);\r\n            } else {\r\n              setGetForEvidenceD((x) => {\r\n                return [...x, chat];\r\n              });\r\n            }\r\n\r\n            // df_event_query(\"ABC_THOUGHT_EXPLAIN_D_GET_FOR_2\");\r\n            console.log(getForEvidenceD, \"getForEvidenceD\");\r\n            _handleExplainDQuickReply();\r\n          }\r\n          if (maxInput === 3) {\r\n            setGetForEvidenceD((x) => {\r\n              return [...x, chat];\r\n            });\r\n\r\n            console.log(getForEvidenceD, \"getForEvidenceD\");\r\n            df_text_query(\r\n              `Okay, I'm gonna leave that there for the moment we might need to go back and tweak that one a little bit as we go along.`,\r\n              false,\r\n              \"bot\"\r\n            );\r\n            setMaxInput(maxInput + 1);\r\n            df_event_query(\"ABC_THOUGHT_EXPLAIN_D_GET_AGAINST_1\");\r\n          }\r\n\r\n          if (maxInput === 4) {\r\n            if (getAgainstEvidenceD.length === 0) {\r\n              setGetAgainstEvidenceD([chat]);\r\n            } else {\r\n              setGetAgainstEvidenceD((x) => {\r\n                return [...x, chat];\r\n              });\r\n            }\r\n            _handleExplainDQuickReply();\r\n            console.log(getAgainstEvidenceD, \"getAgainstEvidenceD\");\r\n          }\r\n\r\n          if (maxInput === 5) {\r\n            setGetAgainstEvidenceD((x) => {\r\n              return [...x, chat];\r\n            });\r\n            _handleExplainDQuickReply();\r\n            console.log(getAgainstEvidenceD, \"getAgainstEvidenceD\");\r\n          }\r\n          if (maxInput === 6) {\r\n            setGetAgainstEvidenceD((x) => {\r\n              return [...x, chat];\r\n            });\r\n            _handleExplainDQuickReply();\r\n            console.log(getAgainstEvidenceD, \"getAgainstEvidenceD\");\r\n          }\r\n          if (maxInput === 7) {\r\n            setGetAgainstEvidenceD((x) => {\r\n              return [...x, chat];\r\n            });\r\n            _handleExplainDQuickReply();\r\n            console.log(getAgainstEvidenceD, \"getAgainstEvidenceD\");\r\n          }\r\n          if (maxInput === 8) {\r\n            setGetAgainstEvidenceD((x) => {\r\n              return [...x, chat];\r\n            });\r\n            _handleExplainDQuickReply();\r\n            console.log(getAgainstEvidenceD, \"getAgainstEvidenceD\");\r\n          }\r\n          if (maxInput === 9) {\r\n            setGetAgainstEvidenceD((x) => {\r\n              return [...x, chat];\r\n            });\r\n            _handleExplainDQuickReply();\r\n            console.log(getAgainstEvidenceD, \"getAgainstEvidenceD\");\r\n          }\r\n          if (maxInput === 10) {\r\n            setGetAgainstEvidenceD((x) => {\r\n              return [...x, chat];\r\n            });\r\n            _handleExplainDQuickReply();\r\n            console.log(getAgainstEvidenceD, \"getAgainstEvidenceD\");\r\n          }\r\n          if (maxInput === 11) {\r\n            setGetAgainstEvidenceD((x) => {\r\n              return [...x, chat];\r\n            });\r\n            _handleExplainDQuickReply();\r\n            console.log(getAgainstEvidenceD, \"getAgainstEvidenceD\");\r\n          }\r\n          if (maxInput === 12) {\r\n            setGetAgainstEvidenceD((x) => {\r\n              return [...x, chat];\r\n            });\r\n            // _handleExplainDQuickReply();\r\n            console.log(getAgainstEvidenceD, \"getAgainstEvidenceD\");\r\n\r\n            df_text_query(\r\n              `Um, so we've got a few things there. Some really interesting things that you've identified that perhaps don't quite fit with this belief: \"${getHotThoughtB[0]}\"\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n            df_text_query(\r\n              ` You've got some things in the for and some things in the against.\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n            df_text_query(\r\n              ` Um in a little bit we're going to talk about how do you balance those up and make sense of all these things being true. But the next step I'm going to get you to go through is to have a look at the unhelpful thinking styles.\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n\r\n            df_text_query(\r\n              ` So now I will show you this unhelpful thinking styles disputation questions this is where it reminds you about the process of disputation.\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n            df_text_query(\r\n              `  So if we could hover over those unhelpful thinking styles graphic interface you would see Disputation Questions in there.\r\n              `,\r\n              false,\r\n              \"bot\"\r\n            );\r\n            df_event_query(\"ABC_THOUGHT_EXPLAIN_D_GET_D_Q\");\r\n          }\r\n        } else {\r\n          df_text_query(\"Please put anything in the chatbox\", false, \"bot\");\r\n        }\r\n      } else {\r\n        if (e.target.value !== \"\") df_text_query(e.target.value, true);\r\n      }\r\n\r\n      e.target.value = \"\";\r\n    }\r\n  }\r\n\r\n  function _handleShowThoughtDiary() {\r\n    console.log(showThoughtDiaryTool);\r\n    return renderOneMessageStatic(\"THOUGHT DIARY\");\r\n  }\r\n\r\n  function _handleQuickReplyPayload(event, payload, text) {\r\n    if (text != \"I have a code\") {\r\n      df_text_query(text, false);\r\n    }\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // if (payload === \"long time ago\" || payload === \"recently\") {\r\n    //   setGetMoodWhenStartedStep1(payload);\r\n    //   // console.log(getMoodWhenStartedStep1);\r\n\r\n    // }\r\n\r\n    console.log(payload);\r\n\r\n    switch (payload) {\r\n      case \"recommended_yes\":\r\n        df_event_query(\"SHOW_RECOMMENDATIONS\");\r\n        break;\r\n      case \"training_masterclass\":\r\n        df_event_query(\"MASTERCLASS\");\r\n        break;\r\n      case \"training_demographics-continue\":\r\n        // setShowMoods(true);\r\n        df_event_query(\"ABC_GETMOOD\");\r\n        break;\r\n      case \"abc_continue_step_1\":\r\n        df_event_query(\"ABC_GETMOOD\");\r\n        break;\r\n      case \"proceed_to_a\":\r\n        setFocusThoughtDiaryLetter(\"a\");\r\n        df_event_query(\"ABC_THOUGHT_DIARY_EXPLAINING_A\");\r\n        break;\r\n      case \"show_thought_diary\":\r\n        setGetMoodWhenStartedStep1(text);\r\n        return df_event_query(\"ABC_THOUGHT_DIARY_NOT_INTRO\");\r\n      case \"yes_mood_different\":\r\n        // setShowMoods(true);\r\n        break;\r\n      case \"abc_explaining_c_nothing\":\r\n        df_event_query(\"ABC_THOUGHT_DIARY_C_RATE_EMOTION\");\r\n        setGetRateEmotion(true);\r\n        setShowChatBox(false);\r\n        // console.log(\"event\");\r\n        // setShowMoods(true);\r\n        break;\r\n      case \"abc_explaining_c_type\":\r\n        setShowChatBox(true);\r\n        setGetAfterFeelings(true);\r\n        // _handleTypeToChatbox(\"after_feelings\");\r\n        // setShowMoods(false);\r\n        break;\r\n      case \"explaining_b_get_thought_other_done\":\r\n        setMaxInput(0);\r\n        setShowChatBox(false);\r\n        df_text_query(\r\n          `Okay, um, before  we kind of leap into that, the idea of kind of challenging or getting curious about some of those thoughts.\r\n          `,\r\n          false,\r\n          \"bot\"\r\n        );\r\n        df_text_query(\r\n          `There's one more thing thing I wanted to do and that was to have a look and see if we could notice any of those unhelpful thinking styles.\r\n            `,\r\n          false,\r\n          \"bot\"\r\n        );\r\n        df_text_query(\r\n          `Now, I'm just going to show you this graphic interface about unhelpful thinking styles.\r\n            `,\r\n          false,\r\n          \"bot\"\r\n        );\r\n\r\n        df_text_query(\r\n          `I want you to remember that these were the things that are really common when people are having problem and they start to think in these characteristic ways and some of them you'll notice happening for you a lot of the time and some not so much.\r\n            `,\r\n          false,\r\n          \"bot\"\r\n        );\r\n        df_event_query(\"ABC_THOUGHT_DIARY_SHOW_UTS\");\r\n        setFocusThoughtDiaryLetter(\"b\");\r\n        // console.log(getOtherThoughtBool, \"getOtherThoughtBool\");\r\n        // console.log(giveUTS, \"giveUTS\");\r\n        // setMaxInput(0);\r\n        // setGiveUTS(true);\r\n        // _handleTypeToChatbox(\"after_feelings\");\r\n        // setShowMoods(false);\r\n        break;\r\n      case \"explaining_b_get_uts\":\r\n        setShowUTS(true);\r\n\r\n        // setGiveUTS(true);\r\n        // setGetUTSAnswer()\r\n\r\n        df_text_query(\r\n          `I'm just wondering that when you look at these thoughts here: \r\n          '${_handleShowList(getOtherThoughtB)}'`,\r\n          false,\r\n          \"bot\"\r\n        );\r\n        df_text_query(\r\n          `\r\n          Is there any of those unhelpful thinking styles that pop out at you that will let you think. \"Yeah I reckon that could be a bit of what's happening\".\r\n          \r\n            `,\r\n          false,\r\n          \"bot\"\r\n        );\r\n        df_text_query(\r\n          `Read the Description only for now, disregard the Disputation Questions.`,\r\n          false,\r\n          \"bot\"\r\n        );\r\n        df_text_query(\r\n          `Are you ready to start identifying your unhelpful thinking styles?`,\r\n          false,\r\n          \"bot\"\r\n        );\r\n\r\n        df_event_query(\"ABC_THOUGHT_DIARY_SHOW_CONFIRM_UTS\");\r\n        setFocusThoughtDiaryLetter(\"b_uts\");\r\n        setShowChatBox(false);\r\n\r\n        // _handleTypeToChatbox(\"after_feelings\");\r\n        // setShowMoods(false);\r\n        break;\r\n      case \"explaining_b_confirm_uts\":\r\n        setGetUTSBool(true);\r\n        setShowChatBox(false);\r\n        // setGetUTS(true);\r\n        df_text_query(\r\n          `Click one of the Unhelpful Thinking Styles below! `,\r\n          false,\r\n          \"bot\"\r\n        );\r\n        break;\r\n      // case \"welcome-login\":\r\n      //   break;\r\n      // case \"welcome-continue\":\r\n      //   df_event_query(\"WELCOME_CONTINUE\");\r\n      //   break;\r\n\r\n      // case \"exit_ulayaw\":\r\n      // df_event_query(\"ABC_GETMOOD\");\r\n\r\n      // case \"training_assessment-continue\":\r\n      //   break;\r\n\r\n      // renderOneMessageStatic(\"code\");\r\n      // console.log(\"training_assessment captured\");\r\n      // setClaimCode(true);\r\n      // break;\r\n      // break;\r\n      default:\r\n        df_text_query(text, true);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function _handleAssessmentResult(total) {\r\n    let res = \"\";\r\n    if (total >= 7) res = \"high\";\r\n    if (total < 7) res = \"low\";\r\n\r\n    console.log(\"Assessment Result:\", res, \"Assessment Total:\", total);\r\n\r\n    df_event_query(\"ASSESSMENT_DONE\");\r\n    setClaimCode(false);\r\n  }\r\n\r\n  function _handleMoodResult() {\r\n    df_text_query(_handleMoods(selectedMoods), false);\r\n    df_event_query(\"ABC_STEP1_MOOD_ASSESS\");\r\n    setGetMoodStep1(true);\r\n    // setShowMoods(false);\r\n    // df_event_query(\"ASSESSMENT_DONE\");\r\n    // setClaimCode(false);\r\n  }\r\n\r\n  function _handleHotMoodResult() {\r\n    setGetMoodHot(true);\r\n    df_text_query(_handleMoods(selectedMoods), false);\r\n    df_event_query(\"ABC_THOUGHT_DIARY_C_OTHER_MOOD\");\r\n\r\n    // setShowMoods(false);\r\n    // df_event_query(\"ASSESSMENT_DONE\");\r\n    // setClaimCode(false);\r\n  }\r\n\r\n  function _handleOtherMoodResult() {\r\n    setGetMoodOther(true);\r\n    setShowMoodsOther(false);\r\n    df_text_query(_handleMoods(getOtherEmotionCAnswer), false);\r\n    if (maxInput === 5) {\r\n      setGetMoodOther(false);\r\n      // df_text_query(_handleMoods(getOtherEmotionCAnswer), false);\r\n      setMaxInput(0);\r\n      df_event_query(\"ABC_THOUGHT_DIARY_C_AFTER_MOODS\");\r\n      setShowChatBox(true);\r\n    }\r\n    // setShowMoods(false);\r\n\r\n    // setClaimCode(false);\r\n  }\r\n  function _handleTypeToChatbox(type) {\r\n    if (type === \"emotions\") {\r\n      setShowChatBox(true);\r\n      if (maxInput === 5) {\r\n        setGetMoodOther(false);\r\n        setMaxInput(0);\r\n        df_event_query(\"ABC_THOUGHT_DIARY_C_AFTER_MOODS\");\r\n      } else {\r\n        setGetMoodOther(true);\r\n      }\r\n    }\r\n    if (type === \"thoughts\") {\r\n    }\r\n    if (type === \"for\") {\r\n    }\r\n    if (type === \"against\") {\r\n    }\r\n  }\r\n\r\n  function renderCards(cards) {\r\n    return cards.map((card, i) => <Card key={i} payload={card.structValue} />);\r\n  }\r\n\r\n  function renderOneMessageStatic(message) {\r\n    return (\r\n      <div className=\" rounded-lg  mb-2 text-sm \">\r\n        <div>\r\n          <div\r\n            className={\"flex justify-start space-x-2  p-2 rounded-lg bottom-0 \"}\r\n          >\r\n            <div className={\"flex justify-end flex-col\"}>\r\n              <div className=\" rounded-full flex justify-center  text-white h-10 w-10  \">\r\n                <img src=\"ulayaw.png\" />\r\n                {/* <a href=\"/\">{speaks}</a> */}\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className={\r\n                \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2 bg-[#F2EFEF] text-black font-medium text-left\"\r\n              }\r\n            >\r\n              <label>{message}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function renderOneMessage(message, i) {\r\n    if (message.msg && message.msg.text && message.msg.text.text) {\r\n      return (\r\n        <Message key={i} speaks={message.speaks} text={message.msg.text.text} />\r\n      );\r\n    } else if (message.msg && message.msg.map) {\r\n      return (\r\n        <>\r\n          <div className=\" rounded-lg  mb-2 text-sm \">\r\n            <div>\r\n              <div\r\n                className={\r\n                  \"flex justify-start space-x-2  p-2 rounded-lg bottom-0 \"\r\n                }\r\n              >\r\n                <div className={\"flex justify-end flex-col\"}>\r\n                  <div className=\" rounded-full flex justify-center  text-white h-10 w-10  \">\r\n                    <img src=\"ulayaw.png\" />\r\n                    {/* <a href=\"/\">{speaks}</a> */}\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className={\r\n                    \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2 space-y-4 space-x-2 bg-[#F2EFEF] text-black font-medium text-left h-[420px] flex flex-col justify-evenly\"\r\n                  }\r\n                >\r\n                  <label className=\"text-center \">{message.msg.map.text}</label>\r\n\r\n                  <span className=\" h-[350px] w-[350px] relative\">\r\n                    <MapContainer\r\n                      lat={message.msg.map.latitude}\r\n                      lng={message.msg.map.longitude}\r\n                    />\r\n                  </span>\r\n\r\n                  {/* <iframe\r\n                    width=\"350\"\r\n                    height=\"350\"\r\n                    loading=\"lazy\"\r\n                    allowfullscreen\r\n                    // view mode\r\n                    src={`https://www.google.com/maps/embed/v1/view?key=${message.msg.map.key}&center=${message.msg.map.latitude},${message.msg.map.longitude}&zoom=18&maptype=satellite`}\r\n\r\n                    // view mode\r\n                    // src={`https://www.google.com/maps/embed/v1/view?key=${message.msg.map.key}&center=7.152694784312385,125.60000875362125&zoom=18&maptype=satellite`}\r\n\r\n                    // place mode\r\n                    // src=\"https://www.google.com/maps/embed/v1/place?key=AIzaSyA6hz3_zGUdW-B6RrjX1zi2nKVfM9sRyjg&q=Space+Needle,Seattle+WA\"\r\n\r\n                    // streetview mode\r\n                    // src={`https://www.google.com/maps/embed/v1/streetview?key=${message.msg.map.key}&location=${message.msg.map.latitude},${message.msg.map.longitude}&heading=210&pitch=10&fov=35`}\r\n                  ></iframe> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (message.msg && message.msg.payload.fields.cards) {\r\n      //message.msg.payload.fields.cards.listValue.values\r\n\r\n      return (\r\n        <div className=\"border-2 border-black rounded-lg p-2 mb-2 \" key={i}>\r\n          <div className=\"bg-gray-500 rounded-full p-2 text-white self-center h-10 w-10 \">\r\n            <a href=\"/\">{message.speaks}</a>\r\n          </div>\r\n          <div className=\"border-2 border-black rounded-lg p-2 mb-2 transform scale-75\">\r\n            <div style={{ overflow: \"hidden\" }}>\r\n              <div className=\"overflow-y-hidden\" style={{ height: 400 }}>\r\n                <div\r\n                  className=\"flex flex-row space-x-2 \"\r\n                  style={{\r\n                    height: 300,\r\n                    width:\r\n                      message.msg.payload.fields.cards.listValue.values.length *\r\n                      240,\r\n                  }}\r\n                >\r\n                  {renderCards(\r\n                    message.msg.payload.fields.cards.listValue.values\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.quick_replies\r\n    ) {\r\n      return (\r\n        <>\r\n          <QuickReplies\r\n            text={\r\n              message.msg.payload.fields.text\r\n                ? message.msg.payload.fields.text\r\n                : null\r\n            }\r\n            key={i}\r\n            replyClick={_handleQuickReplyPayload}\r\n            speaks={message.speaks}\r\n            payload={message.msg.payload.fields.quick_replies.listValue.values}\r\n          />\r\n          {/* {console.log(message)} */}\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.quick_replies_welcome &&\r\n      quickRepliesWelcome\r\n    ) {\r\n      return (\r\n        <>\r\n          {quickRepliesWelcome ? (\r\n            <div\r\n              className={\r\n                \"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"\r\n              }\r\n            >\r\n              <div\r\n                className={\r\n                  \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n                }\r\n              >\r\n                <span className=\"flex flex-wrap\">\r\n                  <a\r\n                    style={{ margin: 3 }}\r\n                    onClick={() => {\r\n                      // df_text_query(\"Show Thought Diary\", false);\r\n                      setQuickRepliesWelcome(false);\r\n                      setShowChatBox(false);\r\n                      setShowModalLogin(true);\r\n                    }}\r\n                    className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                  >\r\n                    Login\r\n                  </a>\r\n                  <a\r\n                    style={{ margin: 3 }}\r\n                    onClick={() => {\r\n                      // df_text_query(\"Show Thought Diary\", false);\r\n                      setQuickRepliesWelcome(false);\r\n                      setShowChatBox(true);\r\n                      df_text_query(\"Magpatuloy\", false);\r\n                      df_event_query(\"WELCOME_CONTINUE\");\r\n                      // setShowChatBox(true);\r\n                    }}\r\n                    className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                  >\r\n                    Magpatuloy\r\n                  </a>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {showThoughtDiaryTool\r\n            ? renderOneMessageStatic(\r\n                \"You might want to have a look at this tool to get a better sense of what it's all about. But I will walk you through it.\"\r\n              )\r\n            : \"\"}\r\n\r\n          {showThoughtDiaryTool ? (\r\n            <div>\r\n              <QuickReplies\r\n                text={\r\n                  message.msg.payload.fields.text\r\n                    ? message.msg.payload.fields.text\r\n                    : null\r\n                }\r\n                key={i}\r\n                replyClick={_handleQuickReplyPayload}\r\n                speaks={message.speaks}\r\n                payload={message.msg.payload.fields.show_diary.listValue.values}\r\n                // dontShowChatBox={true}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.multiple_choice &&\r\n      correctCode\r\n    ) {\r\n      // return renderOneMessageStatic(\"Tama ang code congrats!\");\r\n      return (\r\n        <>\r\n          <MultipleChoice\r\n            key={i}\r\n            _handleAssessmentResult={_handleAssessmentResult}\r\n            speaks={message.speaks}\r\n            payload={\r\n              message.msg.payload.fields.multiple_choice.listValue.values\r\n            }\r\n            setAssessmentScore={setAssessmentScore}\r\n            assessmentScore={assessmentScore}\r\n          />\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.multiple_choice\r\n    ) {\r\n      // new code input\r\n      if (!claimCode) {\r\n        setClaimCode(true);\r\n      }\r\n\r\n      return renderOneMessageStatic(\"Paki lagay ng code\");\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.get_mood\r\n    ) {\r\n      return (\r\n        <>\r\n          <GetMoods\r\n            key={i}\r\n            _handleMoodResult={_handleMoodResult}\r\n            hotEmotion={true}\r\n            speaks={message.speaks}\r\n            payload={message.msg.payload.fields.get_mood.listValue.values}\r\n            selectedMoods={selectedMoods}\r\n            setSelectedMoods={setSelectedMoods}\r\n            showAtEntrance={true}\r\n            // setAssessmentScore={setAssessmentScore}\r\n            // assessmentScore={assessmentScore}\r\n          />\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.mood_assess &&\r\n      getMoodStep1\r\n    ) {\r\n      return (\r\n        <>\r\n          {/* {getMoodStep1\r\n            ? renderOneMessageStatic(\r\n                \"Do you have any ideas when these mood(s) first appeared?\"\r\n              )\r\n            : \"\"} */}\r\n\r\n          {renderOneMessageStatic(\r\n            message.msg.payload.fields.mood_assess_text.stringValue\r\n          )}\r\n          <QuickReplies\r\n            text={\r\n              message.msg.payload.fields.mood_assess_text.stringValue\r\n                ? message.msg.payload.fields.mood_assess_text.stringValue\r\n                : null\r\n            }\r\n            key={i}\r\n            replyClick={_handleQuickReplyPayload}\r\n            onChange={() => {\r\n              setShowThoughtDiaryTool(true);\r\n            }}\r\n            speaks={message.speaks}\r\n            payload={message.msg.payload.fields.mood_assess.listValue.values}\r\n            showDiary={true}\r\n          />\r\n          {/* {console.log(message)} */}\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.show_diary\r\n    ) {\r\n      return (\r\n        <>\r\n          {/* {renderOneMessageStatic(\r\n            \"Do you have any ideas when these mood(s) first appeared?\"\r\n          )} */}\r\n\r\n          {!showThoughtDiaryTool ? (\r\n            <div\r\n              className={\r\n                \"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"\r\n              }\r\n            >\r\n              <div\r\n                className={\r\n                  \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n                }\r\n              >\r\n                <span className=\"flex flex-wrap\">\r\n                  <a\r\n                    style={{ margin: 3 }}\r\n                    onClick={() => {\r\n                      // df_text_query(\"Show Thought Diary\", false);\r\n                      setShowThoughtDiaryTool(true);\r\n                      // setShowChatBox(true);\r\n                    }}\r\n                    className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                  >\r\n                    Show Thought Diary\r\n                  </a>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {showThoughtDiaryTool\r\n            ? renderOneMessageStatic(\r\n                \"You might want to have a look at this tool to get a better sense of what it's all about. But I will walk you through it.\"\r\n              )\r\n            : \"\"}\r\n\r\n          {showThoughtDiaryTool ? (\r\n            <div>\r\n              <QuickReplies\r\n                text={\r\n                  message.msg.payload.fields.text\r\n                    ? message.msg.payload.fields.text\r\n                    : null\r\n                }\r\n                key={i}\r\n                replyClick={_handleQuickReplyPayload}\r\n                speaks={message.speaks}\r\n                payload={message.msg.payload.fields.show_diary.listValue.values}\r\n                // dontShowChatBox={true}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.agree_a\r\n    ) {\r\n      return (\r\n        <>\r\n          {renderOneMessageStatic(\r\n            `So, when you mention '${getMoodWhenStartedStep1}' what time and place do you think you first noticed the change in your mood? `\r\n          )}\r\n\r\n          {renderOneMessageStatic(\r\n            `Answer this question: \r\n            ${\" \"} Was it yesterday? last week? last month? last year? last decade? When did it occur? at school? at work? at home? while playing? while working? Try to put it in a lesser sentence so that we can fit it here in the thought diary. `\r\n          )}\r\n\r\n          {activateGetAdverseStep3 === 0 ? setActivateGetAdverseStep3(1) : \"\"}\r\n\r\n          {activateGetAdverseStep3 === 2\r\n            ? renderOneMessageStatic(\r\n                `\r\n            Okay I got your answer here.'${getAdverseStep3UseState}' `\r\n              )\r\n            : \"\"}\r\n\r\n          {activateGetAdverseStep3 === 2 && getAdverseStep3 === null ? (\r\n            <div\r\n              className={\r\n                \"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"\r\n              }\r\n            >\r\n              <div\r\n                className={\r\n                  \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n                }\r\n              >\r\n                <span className=\"flex flex-wrap\">\r\n                  <a\r\n                    style={{ margin: 3 }}\r\n                    onClick={() => {\r\n                      df_text_query(getAdverseStep3UseState, false);\r\n                      df_event_query(\"ABC_THOUGHT_DIARY_EXPLAINING_C\");\r\n                      setGetAdverseStep3(getAdverseStep3UseState);\r\n                      setFocusThoughtDiaryLetter(\"c\");\r\n                      setShowChatBox(false);\r\n                    }}\r\n                    className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                  >\r\n                    Now, click here to write it on the thought diary.\r\n                  </a>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.get_mood_hot\r\n    ) {\r\n      return (\r\n        <>\r\n          {renderOneMessageStatic(\r\n            `So you mentioned earlier about your present mood(s): '${_handleMoods(\r\n              getHotEmotionCAnswer\r\n            )}' `\r\n          )}\r\n\r\n          {renderOneMessageStatic(\r\n            `Is it still the ones you feel when we go back to the time after you said this: '${getAdverseStep3}' or is your mood different back then? If yes can you identify your mood back then again for me? `\r\n          )}\r\n\r\n          {!getMoodHot ? (\r\n            <div\r\n              className={\r\n                \"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"\r\n              }\r\n            >\r\n              <div\r\n                className={\r\n                  \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n                }\r\n              >\r\n                <span className=\"flex flex-wrap\">\r\n                  <a\r\n                    style={{ margin: 3 }}\r\n                    onClick={() => {\r\n                      setShowMoodsHot(true);\r\n                      // console.log(getHotEmotionCAnswer, \"different mood\");\r\n                    }}\r\n                    className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                  >\r\n                    Different Mood\r\n                  </a>\r\n                  <a\r\n                    style={{ margin: 3 }}\r\n                    onClick={() => {\r\n                      // console.log(getHotEmotionCAnswer, \"same mood\");\r\n                      _handleHotMoodResult();\r\n                      setShowMoodsHot(false);\r\n                    }}\r\n                    className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                  >\r\n                    Same Mood\r\n                  </a>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {showMoodsHot ? (\r\n            <GetMoods\r\n              key={i}\r\n              hotEmotion={true}\r\n              _handleMoodResult={_handleHotMoodResult}\r\n              speaks={message.speaks}\r\n              payload={message.msg.payload.fields.get_mood_hot.listValue.values}\r\n              selectedMoods={selectedMoods}\r\n              setSelectedMoods={setSelectedMoods}\r\n              showAtEntrance={showMoodsHot}\r\n              // dontShowChatBox={true}\r\n              // setAssessmentScore={setAssessmentScore}\r\n              // assessmentScore={assessmentScore}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.get_mood_other &&\r\n      getMoodHot\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            className={\r\n              \"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n              }\r\n            >\r\n              {maxInput != 5 && getOtherEmotionAll.length < 5 ? (\r\n                <span className=\"flex flex-wrap\">\r\n                  {!showMoodsOther ? (\r\n                    <a\r\n                      style={{ margin: 3 }}\r\n                      onClick={() => {\r\n                        setShowMoodsOther(!showMoodsOther);\r\n                        // console.log(getHotEmotionCAnswer, \"different mood\");\r\n                      }}\r\n                      className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                    >\r\n                      Show Emotions\r\n                    </a>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  <a\r\n                    style={{ margin: 3 }}\r\n                    onClick={() => {\r\n                      // _handleOtherMoodResult();\r\n                      _handleTypeToChatbox(\"emotions\");\r\n                    }}\r\n                    className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                  >\r\n                    Type to chatbox\r\n                  </a>\r\n                </span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {showMoodsOther ? (\r\n            <GetMoods\r\n              key={i}\r\n              otherEmotion={true}\r\n              _handleMoodResult={_handleOtherMoodResult}\r\n              speaks={message.speaks}\r\n              payload={\r\n                message.msg.payload.fields.get_mood_other.listValue.values\r\n              }\r\n              selectedMoods={selectedMoods}\r\n              setSelectedMoods={setSelectedMoods}\r\n              showAtEntrance={showMoodsOther}\r\n              // setAssessmentScore={setAssessmentScore}\r\n              // assessmentScore={assessmentScore}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.rate_emotion\r\n    ) {\r\n      return (\r\n        <>\r\n          {/* {console.log(getRateEmotion, \"waw sadsad\")} */}\r\n\r\n          {renderOneMessageStatic(`Okay, so I understand that you've had to\r\n              deal with a lot of the consequences. However, these are only a few\r\n              of the ones I noted. '${_handleMoods(getHotEmotionCAnswer)}' and\r\n              '${_handleShowList(getOtherEmotionAll)}'`)}\r\n          {getAfterFeelings\r\n            ? renderOneMessageStatic(`And you did this after experiencing the\r\n              consequences.'${getAfterFeelingsChat}'`)\r\n            : \"\"}\r\n          {renderOneMessageStatic(\r\n            `Okay, so that '${_handleMoods(\r\n              getHotEmotionCAnswer\r\n            )}' feeling, um... When you say you felt it '${getMoodWhenStartedStep1}' give me an idea of how strong it was.`\r\n          )}\r\n          {renderOneMessageStatic(\r\n            `If you had to give it a rating out of ten (1-10), how would you rate it?`\r\n          )}\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.show_uts\r\n    ) {\r\n      return (\r\n        <>\r\n          <QuickReplies\r\n            text={\r\n              message.msg.payload.fields.show_uts.stringValue\r\n                ? message.msg.payload.fields.show_uts.stringValue\r\n                : null\r\n            }\r\n            key={i}\r\n            replyClick={_handleQuickReplyPayload}\r\n            // onChange={() => {\r\n            //   setShowThoughtDiaryTool(true);\r\n            // }}\r\n            speaks={message.speaks}\r\n            payload={message.msg.payload.fields.show_uts.listValue.values}\r\n            showUTS={true}\r\n          />\r\n          {/* {console.log(message)} */}\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.select_UTS_thought &&\r\n      getUTSThoughtBool\r\n    ) {\r\n      return (\r\n        <div\r\n          className={\"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"}\r\n        >\r\n          <div\r\n            className={\r\n              \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n            }\r\n          >\r\n            <span className=\"flex flex-wrap\">\r\n              {getOtherThoughtB.map((item, i) => {\r\n                if (getUTSContainerState.length != 0) {\r\n                  if (!getUTSContainerState.includes(item)) {\r\n                    return (\r\n                      <a\r\n                        style={{ margin: 3 }}\r\n                        onClick={() => {\r\n                          _handleUTSQuickReply(item, i);\r\n                        }}\r\n                        className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                      >\r\n                        {item}\r\n                      </a>\r\n                    );\r\n                  }\r\n                } else {\r\n                  return (\r\n                    <a\r\n                      style={{ margin: 3 }}\r\n                      onClick={() => {\r\n                        _handleUTSQuickReply(item, i);\r\n                      }}\r\n                      className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                    >\r\n                      {item}\r\n                    </a>\r\n                  );\r\n                }\r\n              })}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.select_HOT_thought &&\r\n      getHotThoughtBool\r\n    ) {\r\n      return (\r\n        <div\r\n          className={\"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"}\r\n        >\r\n          <div\r\n            className={\r\n              \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n            }\r\n          >\r\n            <span className=\"flex flex-wrap\">\r\n              {getOtherThoughtB.map((item, i) => {\r\n                return (\r\n                  <a\r\n                    style={{ margin: 3 }}\r\n                    onClick={() => {\r\n                      _handleHotThoughtQuickReply(item, i);\r\n                    }}\r\n                    className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                  >\r\n                    {item}\r\n                  </a>\r\n                );\r\n              })}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.explain_d &&\r\n      getExplainDBool\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            className={\r\n              \"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n              }\r\n            >\r\n              <span className=\"flex flex-wrap\">\r\n                <a\r\n                  style={{ margin: 3 }}\r\n                  onClick={() => {\r\n                    _handleExplainDQuickReply();\r\n                  }}\r\n                  className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                >\r\n                  Okay, continue.\r\n                </a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.explain_d_get_for_1 &&\r\n      getExplainDBool\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            className={\r\n              \"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n              }\r\n            >\r\n              <span className=\"flex flex-wrap\">\r\n                <a\r\n                  style={{ margin: 3 }}\r\n                  onClick={() => {\r\n                    _handleExplainDQuickReply();\r\n                  }}\r\n                  className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                >\r\n                  Okay I've seen the Disputation Questions\r\n                </a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.explain_d_get_against_1 &&\r\n      getExplainDBool\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            className={\r\n              \"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n              }\r\n            >\r\n              <span className=\"flex flex-wrap\">\r\n                <a\r\n                  style={{ margin: 3 }}\r\n                  onClick={() => {\r\n                    _handleExplainDQuickReply();\r\n                  }}\r\n                  className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                >\r\n                  Okay\r\n                </a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (\r\n      message.msg &&\r\n      message.msg.payload &&\r\n      message.msg.payload.fields &&\r\n      message.msg.payload.fields.explain_d_get_d_q &&\r\n      getExplainDBool\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            className={\r\n              \"flex justify-center space-x-2  p-2 rounded-lg bottom-0 \"\r\n            }\r\n          >\r\n            <div\r\n              className={\r\n                \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2  text-black font-medium text-left \"\r\n              }\r\n            >\r\n              <span className=\"flex flex-wrap\">\r\n                <a\r\n                  style={{ margin: 3 }}\r\n                  onClick={() => {\r\n                    _handleExplainDQuickReply();\r\n                  }}\r\n                  className=\"bg-[#F2EFEF] rounded-full  p-2 px-4 self-center h-10 cursor-pointer\"\r\n                >\r\n                  Okay I've seen the Disputation Questions\r\n                </a>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    //  else if (\r\n    //   message.msg &&\r\n    //   message.msg.payload &&\r\n    //   message.msg.payload.fields &&\r\n    //   message.msg.payload.fields.quick_replies\r\n    // ) {\r\n    // }\r\n  }\r\n\r\n  function _handleMap() {\r\n    return <MapContainer />;\r\n  }\r\n\r\n  function _handleMoods(moodContainer) {\r\n    let res = \"\";\r\n    let firstHit = -1;\r\n    for (let i = 0; i < moodContainer.length; i++) {\r\n      if (moodContainer[i].select && firstHit === -1) {\r\n        firstHit = i;\r\n      }\r\n      if (moodContainer[i].select && i != firstHit) {\r\n        res += \",\";\r\n      }\r\n      if (moodContainer[i].select) {\r\n        res += moodContainer[i].mood_text;\r\n      }\r\n    }\r\n    res += \".\";\r\n    return res;\r\n  }\r\n\r\n  function _handleShowList(listContainer) {\r\n    return listContainer.map((item, i) => {\r\n      let res = \"\";\r\n      if (item != undefined) {\r\n        res += item;\r\n      }\r\n\r\n      return res;\r\n    });\r\n  }\r\n  function _handleUTSMean() {\r\n    if (getUTS === \"Mental Filter\") {\r\n      df_text_query(\r\n        `So, this could indicate that you were focusing only on one part of a situation and ignoring the rest. Usually this means looking at the negative parts of a situation and forgetting the positive parts, and the whole picture is coloured by what may be a single negative detail.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n    }\r\n    if (getUTS === \"Jumping to Conclusions\") {\r\n      df_text_query(\r\n        `So, this could imply that you assume that you know what someone else is thinking (mind reading) and when you make predictions about what is going to  happen in the future (predictive thinking)`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n    }\r\n    if (getUTS === \"Personalisation\") {\r\n      df_text_query(\r\n        `So then that might kind of give us a bit of an idea that you were blaming yourself for everything that goes wrong or could go wrong, even when you may only be partly responsible or not responsible at all. You might be taking 100 per cent responsibility for the occurrence of external events`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n    }\r\n    if (getUTS === \"Catastrophising\") {\r\n      df_text_query(\r\n        `So that may give us a hint as to why we see the situation as terrible, awful, dreadful, and horrible, despite the fact that the problem is quite minor.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n    }\r\n    if (getUTS === \"Black and white thinking\") {\r\n      df_text_query(\r\n        `So, this could imply that you were only seeing one extreme or the other. You are either incorrect or correct, good or bad, and so on. There are no shades of grey or in-betweens.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n    }\r\n    if (getUTS === \"Shoulding and musting\") {\r\n      df_text_query(\r\n        `So, this could indicate that sometimes by saying “I should…” or “I must…” you can put unreasonable demands or pressure on yourself and others. Although these statements are not always unhelpful – for example “I should not get drunk and drive home” – they can sometimes create unrealistic expectations.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n    }\r\n    if (getUTS === \"Overgeneralisation\") {\r\n      df_text_query(\r\n        `So, this could imply that you take a single incident from the past or present and apply it to all current or future situations. If you say \"you always...\", \"everyone...\", or \"I never...\", you're probably overgeneralizing.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n    }\r\n    if (getUTS === \"Labelling\") {\r\n      df_text_query(\r\n        `So, this could imply that you label yourself and others when making broad statements based on behavior in specific situations. You could use this label despite the fact that there are far more cases that are inconsistent with it.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n    }\r\n    if (getUTS === \"Emotional reasoning\") {\r\n      df_text_query(\r\n        `So, this could indicate that you were basing your view of situations or yourself on the way you are feeling. For example, the only evidence that something bad is going to happen is that you feel like something bad is going to happen.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n    }\r\n    if (getUTS === \"Magnification and minimisation\") {\r\n      df_text_query(\r\n        `So, this could indicate that you you magnify or exaggerate the positive attributes of other people and minimise your own positive attributes. It’s as though you’re explaining away your own positive characteristics.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n    }\r\n  }\r\n\r\n  function _handleHotThoughtQuickReply(item, i) {\r\n    df_text_query(item, false, \"user\");\r\n\r\n    setShowChatBox(true);\r\n    setGetHotThoughtB([item]);\r\n    df_text_query(\r\n      \"Okay, I see. That's the one we are going to focus on.\",\r\n      false,\r\n      \"bot\"\r\n    );\r\n    df_text_query(\r\n      `How much do you believe that this is the one that is most likely connected with your emotions? ${item}`,\r\n      false,\r\n      \"bot\"\r\n    );\r\n    df_text_query(\r\n      `If you had to rate it out of a hundred say like a percentage: 1-100%`,\r\n      false,\r\n      \"bot\"\r\n    );\r\n    df_text_query(\r\n      `Greater than 50% is considered to be worse, while less than 50% is considered to be slightly better.`,\r\n      false,\r\n      \"bot\"\r\n    );\r\n\r\n    setGetRateThought(true);\r\n    setGetHotThoughtBool(false);\r\n  }\r\n\r\n  function _handleExplainDQuickReply() {\r\n    if (maxInput === 0) {\r\n      df_text_query(\r\n        `Um, so I think this is really gonna be worth working on. So now we are going to move on to D) part of the thought diary. `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n\r\n      df_text_query(\r\n        `So this bit is called D) for disputation. So this is the section where we try to be a bit curios about the thoughts rather than just taking them to be facts. `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n\r\n      df_text_query(\r\n        `We're going to check them out a little bit. And so the first bit as you can see on the thought diary, it's looking at evidence for and against. So is there any evidence for the thought and is there any evidence against the thought.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `So if we can take a look at the graphic if you can hover one of the Unhelpful Thinking Styles, you can see the Disputation Questions.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_event_query(\"ABC_THOUGHT_EXPLAIN_D_GET_FOR_1\");\r\n    }\r\n    if (maxInput === 1) {\r\n      df_text_query(\r\n        `So we'll start with for. These ones you probably find are coming to mind pretty easy. `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `So I'm just gonna focus on the for. And then tell me what would be your sort of your main reasons in choosing this belief: \"${getHotThoughtB[0]}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `What leads you to think this way? For how long do you think you were having this belief? days? weeks? months? or even years?\r\n         \r\n        Try to be as factual as possible`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setShowChatBox(true);\r\n    }\r\n    if (maxInput === 2) {\r\n      df_text_query(\r\n        `Okay, I can imagine that would be the main piece of evidence. Is there other things that you would see as evidence for this belief: \"${getHotThoughtB[0]}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `Is there anything new that has happened recently? `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n\r\n      setShowChatBox(true);\r\n    }\r\n\r\n    if (maxInput === 4) {\r\n      df_text_query(\r\n        `Um, So maybe we can have a look at some of the evidence in \"against\" just to see if there is anything that doesn't quite fit with this belief. \r\n        \r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `So this is the bit where we need to be really really fair and not cover all things out before we've put them up. \r\n        \r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `We're looking for any piece of evidence, it doesn't quite fit with this really really strong belief. `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `So is there anything, any experiences you've had, anything so you know to be true that don't quite fit with the belief: \"${getHotThoughtB[0]}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `The opposite of this belief? When was the last time you didn't have a problem with this belief?`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setShowChatBox(true);\r\n    }\r\n\r\n    if (maxInput === 5) {\r\n      df_text_query(\r\n        `Okay, so tell me more about that \"${getAgainstEvidenceD[0]}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `What have you noticed about the pattern of your mood um, during those times.\r\n        \r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setShowChatBox(true);\r\n    }\r\n\r\n    if (maxInput === 6) {\r\n      df_text_query(\r\n        `And have you noticed any of these mood patterns happening recently? \"${getAgainstEvidenceD[1]}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `How frequently you get this mood patterns over the last few weeks? Try and specify what time? Answer the question Is it this week? last week? or the other week?\r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setShowChatBox(true);\r\n    }\r\n\r\n    if (maxInput === 7) {\r\n      df_text_query(\r\n        `So I'm wondering is there been any sort of changes or periods where you haven't getting this belief over the last few years? \"${getHotThoughtB[0]}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `I want you to think of a place and time where you haven't getting this belief and what did you feel during those times?\r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setShowChatBox(true);\r\n    }\r\n\r\n    if (maxInput === 8) {\r\n      df_text_query(\r\n        `Okay, how long did it last for that year, you think you weren't getting this belief? \"${getHotThoughtB[0]}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `if we could go back to the time and place when you said: \"${getAgainstEvidenceD[3]}\"\r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setShowChatBox(true);\r\n    }\r\n\r\n    if (maxInput === 9) {\r\n      df_text_query(\r\n        `Okay and I'm wondering as well if you experienced this belief before? \"${getHotThoughtB[0]}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `And what happened there? how did you face this belief back then?\r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setShowChatBox(true);\r\n    }\r\n\r\n    if (maxInput === 10) {\r\n      df_text_query(\r\n        `So you experienced this problem that you have when we go back to the time and place when you said:\"${getAgainstEvidenceD[5]}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `Can you say that you overcome this problem? if not how did you got through it? did you came out of it? did you recovered from it? did it went away? What would you say?\r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setShowChatBox(true);\r\n    }\r\n\r\n    if (maxInput === 11) {\r\n      df_text_query(\r\n        `Um, is there anything else that you can think of that kind of would be evidence in \"against\" that doesn't quite fit with this belief: \"${getHotThoughtB[0]}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `Maybe a friend of your's that have overcome this kind of problem? or have you seen other people get through this kind of problem?\r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n\r\n      setShowChatBox(true);\r\n    }\r\n    if (maxInput === 12) {\r\n      df_text_query(\r\n        `So earlier you come up with: \"${getUTSContainer.map((item, i) => {\r\n          // console.log(getUTSContainer)\r\n          return (\r\n            <>\r\n              {item.title}\r\n              {i != getUTSContainer.length - 1 ? \",\" : \".\"}\r\n            </>\r\n          );\r\n        })}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `So this one \"${\r\n          getHotThoughtB[0]\r\n        }\" we've really identified as \"${getUTSContainer.map((item, i) => {\r\n          if (getHotThoughtB[0] === item.thought) {\r\n            return item.title;\r\n          }\r\n        })}\"\r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n\r\n      df_text_query(\r\n        `So what does it say there about what might be good strategy for that unhelpful thinking style can you have a look?\r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `Okay, so why don't we try those. So the first question was \"how do I know this?\" what is your basis for thinking this?\r\n        `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n\r\n      setShowChatBox(true);\r\n    }\r\n\r\n    setMaxInput(maxInput + 1);\r\n    setFocusThoughtDiaryLetter(\"d\");\r\n  }\r\n  function _handleUTSQuickReply(item, i) {\r\n    df_text_query(item, false, \"user\");\r\n    let UTSformat = { title: getUTS, thought: item };\r\n    if (getUTSContainerState.length === 0) {\r\n      setGetUTSCointainerState([item]);\r\n      setGetUTSCointainer([UTSformat]);\r\n    } else {\r\n      setGetUTSCointainerState((x) => {\r\n        return [...getUTSContainerState, item];\r\n      });\r\n      setGetUTSCointainer((prev) => {\r\n        return [...prev, UTSformat];\r\n      });\r\n      // console.log(getUTSContainerState, \"utsCont\");\r\n    }\r\n\r\n    df_text_query(\r\n      `Okay this one \"${item}\" we've noticed might be as \"${getUTS}\" `,\r\n      false,\r\n      \"bot\"\r\n    );\r\n    _handleUTSMean();\r\n\r\n    let res = [];\r\n    res = getOtherThoughtB.map((x, i) => {\r\n      console.log(x, \"x\");\r\n      // if (x != item) {\r\n      //   return x;\r\n      // }\r\n      if (getUTSContainerState.length === 0) {\r\n        if (x != item) {\r\n          return x;\r\n        }\r\n      } else {\r\n        if (!getUTSContainerState.includes(x)) {\r\n          return x;\r\n        }\r\n      }\r\n    });\r\n    setGetUTSThoughtBool(false);\r\n\r\n    if (maxInput != 3) {\r\n      df_text_query(\r\n        `Is there anything else in this list that matches one of those unhelpful thinking styles: \r\n        '${_handleShowList(res)}'\r\n        (you can reuse the one you chose earlier)\" `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `Click one of the Unhelpful Thinking Styles below! `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setGetUTSState(true);\r\n      setMaxInput(maxInput + 1);\r\n    } else {\r\n      df_text_query(\r\n        `Um, so we've picked up on a couple of those unhelpful thinking styles and that might start us thinking: \"maybe there is a bit of that distorted or biased thinking happening here\"  `,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `One final thing then is to think about which of these thoughts we've got here: ${_handleShowList(\r\n          getOtherThoughtB\r\n        )}`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n\r\n      df_text_query(\r\n        `Is the one that really links up to these feelings C) column`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      df_text_query(\r\n        `So the idea here is, we try and find the hot thought. So the hot thought is the thought that's most connected up with the emotions that you have, um so we can focus on that one.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n\r\n      df_text_query(\r\n        `Do you know which one of those is kind of the most hot thought, one that's most kind of distressing for you?`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setFocusThoughtDiaryLetter(\"b_c\");\r\n      setGetUTSBool(false);\r\n      df_event_query(\"ABC_THOUGHT_DIARY_GET_HOT_THOUGHT\");\r\n    }\r\n    console.log(getUTSContainer, \"UTS CONTAINER\");\r\n  }\r\n  function _handleUTSClick(title) {\r\n    if (getUTSBool) {\r\n      df_text_query(title, false, \"user\");\r\n\r\n      df_text_query(\r\n        `Which one of these do you think might be it because I think you're probably right.`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n\r\n      // console.log(getOtherThoughtB);\r\n      df_text_query(\r\n        `Which one do you think might be a \"${title}\"`,\r\n        false,\r\n        \"bot\"\r\n      );\r\n      setGetUTS(title);\r\n    }\r\n    setGetUTSThoughtBool(true);\r\n    df_event_query(\"ABC_THOUGHT_DIARY_SELECT_UTS_THOUGHT\");\r\n  }\r\n  // function _handleMoods(moodContainer) {\r\n  //   let res = \"\";\r\n  //   for (let i = 0; i < moodContainer.length; i++) {\r\n  //     if (i === moodContainer.length - 1) {\r\n  //       if (moodContainer[i].select === true) {\r\n  //         res += moodContainer[i].mood_text + \".\";\r\n  //       }\r\n  //     } else {\r\n  //       if (moodContainer[i].select === true) {\r\n  //         res += moodContainer[i].mood_text + \",\";\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return res;\r\n  // }\r\n\r\n  function renderMessages(returnedMessages) {\r\n    // if (cookies.get(\"termsAndConditions\")) {\r\n    if (returnedMessages) {\r\n      // console.log(returnedMessages);\r\n\r\n      return returnedMessages.map((message, i) => {\r\n        // console.log(i);\r\n        return renderOneMessage(message, i);\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n    // }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!location.loaded) {\r\n      // cookies.set(\"locationCookie\", false, { path: \"/\" });\r\n      setGetLocation(false);\r\n    }\r\n    if (\r\n      showChatBox &&\r\n      showBot &&\r\n      cookies.get(\"termsAndConditions\") &&\r\n      getLocation\r\n      // cookies.get(\"locationCookie\")\r\n    ) {\r\n      talkInput.focus();\r\n    }\r\n    messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    // console.log(talkInput);\r\n    if (talkInput.current != null) {\r\n      talkInput.focus();\r\n    }\r\n  });\r\n  // }, [getLocation, cookies.get(\"termsAndConditions\")]);\r\n\r\n  function resolveAfterXSeconds(x) {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(x);\r\n      }, x * 1000);\r\n    });\r\n  }\r\n\r\n  // jsx\r\n  return (\r\n    <div>\r\n      <div className=\"z-40\">\r\n        {showBot ? (\r\n          <div className=\"flex flex-col  md:w-96 xl:w-[500px] shadow-lg w-full border-2  bottom-0 bg-white right-0 md:bottom-5   md:right-5  rounded-[20px] fixed  h-full md:h-3/4 \">\r\n            {/* nav */}\r\n            <nav className=\"border-b-[3px] border-[#E4E4E4]\">\r\n              <div className=\"p-4 flex flex-row justify-between \">\r\n                <div className=\"flex  text-[#5DCFFF] text-[20px]  font-normal\">\r\n                  <span className=\"mr-2 self-center h-2 w-2 shadow-lg   rounded-full  bg-green-400 \"></span>\r\n                  <p>Ulayaw</p>\r\n                </div>\r\n                <ul className=\"right-0 cursor-pointer text-white font-semibold rounded-full bg-[#5DCFFF] h-[28px] w-[28px] flex justify-center transform hover:scale-[1.050]\">\r\n                  <li className=\" \">\r\n                    <a\r\n                      href=\"/\"\r\n                      // onClick={() => {\r\n                      //   setShowBot(!showBot);\r\n                      // }}\r\n                      className=\" text-[19px] \"\r\n                      onClick={hide}\r\n                    >\r\n                      ✖\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n            {/* body */}\r\n            <div\r\n              className=\"h-full  overflow-auto space-y-2 \"\r\n              //\r\n            >\r\n              <div className=\" p-2 \">\r\n                <div className=\" rounded-lg  mb-2 text-sm \">\r\n                  <div>\r\n                    <div\r\n                      className={\r\n                        \"flex justify-start space-x-2  p-2 rounded-lg bottom-0 \"\r\n                      }\r\n                    >\r\n                      <div className={\"flex justify-end flex-col\"}>\r\n                        <div className=\" rounded-full flex justify-center  text-white h-10 w-10  \">\r\n                          <img src=\"ulayaw.png\" />\r\n                          {/* <a href=\"/\">{speaks}</a> */}\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div\r\n                        className={\r\n                          \"rounded-[10px] self-center overflow-ellipsis  px-4 py-2 bg-[#F2EFEF] text-black font-medium text-left\"\r\n                        }\r\n                      >\r\n                        <label>\r\n                          Kaibigan, ang pakikipag-usap na ito ay pribado. Ang\r\n                          iyong pagkakakilanlan ay protektado at may siguridad\r\n                          ang bawat impormasyon mababanggit. Maaaring basahin\r\n                          muna ang\r\n                          <button\r\n                            className=\"pl-1 underline font-bold text-[#5DCFFF] cursor-pointer transform hover:scale-105\"\r\n                            onClick={() => {\r\n                              setShowModal(true);\r\n                            }}\r\n                          >\r\n                            kondisyon\r\n                          </button>{\" \"}\r\n                          upang makapag patuloy.\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {renderMessages(messages)}\r\n              </div>\r\n              <div\r\n                ref={(el) => {\r\n                  messagesEnd = el;\r\n                }}\r\n                className=\"clear-both\"\r\n                // style={{ float: \"left\", clear: \"both\" }}\r\n              ></div>\r\n            </div>\r\n            {/* input */}\r\n            {showChatBox && cookies.get(\"termsAndConditions\") && getLocation ? (\r\n              <label className=\"  border-[#E4E4E4]  w-full md:w-96  xl:w-[500px] flex flex-row border-t-2 rounded-b-[20px] \">\r\n                <input\r\n                  className=\" focus:ring-1 focus:ring-[#5DCFFF] p-4 outline-none w-full rounded-b-[20px]\"\r\n                  type=\"text\"\r\n                  onKeyPress={_handleInputKeyPress}\r\n                  placeholder=\"Iyong Mensahe ...\"\r\n                  ref={(input) => {\r\n                    talkInput = input;\r\n                  }}\r\n                  disabled={!cookies.get(\"termsAndConditions\")}\r\n                />\r\n                <button\r\n                  className=\"absolute p-4 transform hover:scale-[1.1] right-0\"\r\n                  disabled={!cookies.get(\"termsAndConditions\")}\r\n                >\r\n                  👉\r\n                </button>\r\n              </label>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <button>\r\n            <button\r\n              className=\" h-[50px]  bottom-10  right-10  fixed  \"\r\n              // style={{ height: 500 }}\r\n            >\r\n              <nav>\r\n                {/* border-[2px] border-[#5DCFFF] */}\r\n                <div className=\" flex flex-row justify-between rounded-full cursor-pointer shadow-lg \">\r\n                  <span\r\n                    className=\" rounded-full flex justify-center text-white h-16   shadow-lg bg-[#5DCFFF]  p-1 transform hover:scale-[1.02] \"\r\n                    onClick={show}\r\n                  >\r\n                    <img src=\"ulayaw.png\" />\r\n                    <span className=\" h-2 w-2 shadow-lg animate-pulse  rounded-full absolute right-0 top-1 bg-green-400 \"></span>\r\n\r\n                    <span className=\" absolute w-[125px] px-2 border-2 py-2 shadow-lg   rounded-lg text-center right-[70px] top-2 bg-white text-black border-[#5DCFFF]\">\r\n                      <p>kamusta! 👋</p>\r\n                    </span>\r\n\r\n                    {/* <a href=\"/\">{speaks}</a> */}\r\n                  </span>\r\n\r\n                  {/* <a href=\"/\" className=\"brand-logo\">\r\n                  Ulayaw - Chatbot\r\n                </a> */}\r\n                  {/* <ul className=\"right-0\">\r\n                  <li className=\"\">\r\n                    <a\r\n                      href=\"/\"\r\n                      // onClick={() => {\r\n                      //   setShowBot(!showBot);\r\n                      // }}\r\n                      onClick={show}\r\n                    >\r\n                      Show\r\n                    </a>\r\n                  </li>\r\n                </ul> */}\r\n                </div>\r\n              </nav>\r\n              <div\r\n                ref={(el) => {\r\n                  messagesEnd = el;\r\n                }}\r\n                className=\"clear-both\"\r\n                // style={{ float: \"left\", clear: \"both\" }}\r\n              ></div>\r\n            </button>\r\n          </button>\r\n        )}\r\n        {/* <DisplayBot talkInput={talkInput} messagesEnd={messagesEnd} /> */}\r\n        {showModal ? (\r\n          <ModalTermsAndConditions\r\n            showModal={showModal}\r\n            setShowModal={setShowModal}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {showModalLogin ? (\r\n          <ModalLogin\r\n            showModal={showModalLogin}\r\n            setShowModal={setShowModalLogin}\r\n            setQuickRepliesWelcome={setQuickRepliesWelcome}\r\n            location={location.coordinates}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        {/* <DisplayBot talkInput={talkInput} messagesEnd={messagesEnd} /> */}\r\n      </div>\r\n      <div className=\"z-0 \">{showThoughtDiaryTool ? <ThoughtDiary /> : \"\"}</div>\r\n      {showUTS ? (\r\n        <UTS _handleUTSClick={_handleUTSClick} getUTSBool={getUTSBool} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ModalTermsAndConditions({ showModal, setShowModal }) {\r\n  return (\r\n    <div className=\"fixed top-0 w-full h-full bg-black bg-opacity-[0.75] \">\r\n      <div className=\"h-full flex flex-col  justify-center align-center\">\r\n        {/* header */}\r\n        <div className=\"w-3/4 rounded-t-[10px] text-[20px] lg:text-[26px] p-[18px] lg:p-[28px]  text-white self-center bg-[#5DCFFF] font-semibold\">\r\n          <p>Terms and Condition</p>\r\n        </div>\r\n\r\n        {/* body */}\r\n        <div className=\"w-3/4 rounded-b-[10px] text-[12px] lg:text-[16px] p-[18px] px-[71px] py-[55px] self-center bg-white grid \">\r\n          <p className=\"text-justify\">\r\n            RA 10173 or the Data Privacy Act protects individuals from\r\n            unauthorized processing of personal information. The researchers\r\n            will adhere to this law in order to protect the data privacy and\r\n            confidentiality of all the respondents. Any identifiable information\r\n            obtained in connection with this study will remain confidential,\r\n            except if necessary, to protect your rights or welfare. <br />{\" \"}\r\n            <br />\r\n            This certificate means that the researcher can resist the release of\r\n            information about your participation to people who are not connected\r\n            with the study. When the research results are published or discussed\r\n            in conferences, no identifiable information will be used. In\r\n            addition, since the data gathering process will be conducted online,\r\n            the researchers will highly secure the data obtained in a password\r\n            protected computer after immediate retrieval from Conversation\r\n            (DialogFlow & Ulayaw). <br />\r\n            <br /> We would like to get your location as well for research\r\n            purposes. The access of data will be restricted to the researchers\r\n            only.\r\n          </p>\r\n\r\n          {/* agree */}\r\n          <form className=\"mt-[20px] \">\r\n            <label\r\n              className={\r\n                cookies.get(\"termsAndConditions\")\r\n                  ? \" space-x-[10px]  text-gray-600 inline-block p-4 bg-gray-50 rounded-lg  select-none w-full\"\r\n                  : \" space-x-[10px]  text-[#5DCFFF] inline-block p-4 hover:bg-gray-200 rounded-lg cursor-pointer select-none w-full\"\r\n              }\r\n            >\r\n              <input\r\n                className=\"self-center\"\r\n                name=\"agreed\"\r\n                type=\"checkbox\"\r\n                onClick={() => {\r\n                  cookies.set(\"termsAndConditions\", true, { path: \"/\" });\r\n                }}\r\n                disabled={cookies.get(\"termsAndConditions\")}\r\n                checked={cookies.get(\"termsAndConditions\")}\r\n\r\n                // onChange={}\r\n              />\r\n              <p className=\"font-bold cursor-pointer inline-block\">\r\n                I Agree to the Terms and Agreement\r\n              </p>\r\n            </label>\r\n          </form>\r\n          {/* footer */}\r\n          <button\r\n            className=\"mt-[20px] text-white  px-[13px] py-[8px] justify-self-end lg:w-[70px] w-[60px] rounded-[5px] bg-[#5DCFFF]\"\r\n            onClick={() => {\r\n              setShowModal(!showModal);\r\n            }}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ThoughtDiary() {\r\n  const { getAdverseStep3, setGetAdverseStep3 } = useContext(\r\n    GetAdverseAnswerContext\r\n  );\r\n  const { getHotEmotionCAnswer, setGetHotEmotionCAnswer } = useContext(\r\n    GetHotEmotionCAnswerContext\r\n  );\r\n  const { getOtherEmotionCAnswer, setGetOtherEmotionCAnswer } = useContext(\r\n    GetOtherEmotionCAnswerContext\r\n  );\r\n  const { focusThoughtDiaryLetter, setFocusThoughtDiaryLetter } = useContext(\r\n    ThoughtDiaryFocusContext\r\n  );\r\n\r\n  const { getOtherEmotionAll, setGetOtherEmotionAll } = useContext(\r\n    GetOtherEmotionAllContext\r\n  );\r\n  const { getHotEmotionRate, setGetHotEmotionRate } = useContext(\r\n    HotEmotionRateContext\r\n  );\r\n  const { getOtherThoughtB, setGetOtherThoughtB } = useContext(\r\n    GetOtherThoughtBContext\r\n  );\r\n  const { getHotThoughtRate, setGetHotThoughtRate } = useContext(\r\n    HotThoughtRateContext\r\n  );\r\n\r\n  const { getHotThoughtB, setGetHotThoughtB } = useContext(\r\n    GetHotThoughtBContext\r\n  );\r\n  const { getUTSContainer, setGetUTSCointainer } = useContext(\r\n    GetUTSContainerContext\r\n  );\r\n  const { getForEvidenceD, setGetForEvidenceD } = useContext(\r\n    GetForEvidenceDContext\r\n  );\r\n  const { getAgainstEvidenceD, setGetAgainstEvidenceD } = useContext(\r\n    GetAgainstEvidenceDContext\r\n  );\r\n  const { getLocation, setGetLocation } = useContext(GetLocationContext);\r\n\r\n  let firstHit = -1;\r\n  let firstHitOther = -1;\r\n\r\n  function _handleMoodResultGetHotEmotionCAnswer(item, i) {\r\n    // console.log(item, i, getHotEmotionCAnswer.length - 1, \"test\");\r\n\r\n    if (item.select) {\r\n      return item.mood_text;\r\n    }\r\n  }\r\n  const [basket, setBasket] = useState([]);\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [thought, setThought] = useState(\"\");\r\n  const HoverText = () => {\r\n    return (\r\n      <div className={\"absolute  h-[100px]  w-[150px] -mt-[100px]  ml-[60px] \"}>\r\n        <div className=\"h-full flex flex-col w-full pl-[24px]\">\r\n          {/* header */}\r\n          <div className=\"w-full rounded-[10px] text-[20px]  p-[10px]  text-white text-center self-center bg-[#5DCFFF] font-semibold shadow-lg border-2\">\r\n            <p>{thought}</p>\r\n          </div>\r\n          {/* body */}\r\n\r\n          {/* {UTSList()} */}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const onMouseEnter = () => {\r\n    setIsHovering(true);\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setIsHovering(false);\r\n  };\r\n  const [{ isOver }, dropRef] = useDrop({\r\n    accept: \"uts\",\r\n    drop: (item) =>\r\n      setBasket((basket) =>\r\n        !basket.includes(item) ? [...basket, item] : basket\r\n      ),\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n    }),\r\n  });\r\n  function _handleMoodResultGetOtherEmotionAll(item, i) {\r\n    // console.log(item, i, getHotEmotionCAnswer.length - 1, \"test\");\r\n\r\n    // item.select\r\n    if (item) {\r\n      return item;\r\n    }\r\n  }\r\n  function _handleShowList(listContainer) {\r\n    return listContainer.map((item, i) => {\r\n      let res = \"\";\r\n      if (listContainer.length === 1) return (res = item);\r\n\r\n      if (i != 0) {\r\n        res += \",\";\r\n      }\r\n      res += item;\r\n      return res;\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"h-screen bg-[#3D829F]\">\r\n      <div className=\"left-0 top-0  w-[full] h-full  bg-opacity-[0.60] z-20 mb-6\">\r\n        <div className=\" left-0   w-[1350px] pl-[24px] pt-[26px] h-full  \">\r\n          {/* header */}\r\n          <div className=\" w-[215px] h-[54px] rounded-t-[15px] ml-2 text-[20px] lg:text-[24px] p-[18px] lg:pt-[11px] px-[23px] text-white self-center bg-[#49c3f7] font-bold\">\r\n            <p>Thought Diary</p>\r\n          </div>\r\n\r\n          {/* body */}\r\n          {/* bg-black bg-opacity-[0.75] text-opacity-0  */}\r\n          <div\r\n            className={\r\n              focusThoughtDiaryLetter != null\r\n                ? \"bg-[#5DCFFF] w-full rounded-[15px]  self-center grid grid-cols-4  min-h-[750px]  text-white font-semibold  \"\r\n                : \"w-full rounded-[15px]  self-center grid grid-cols-4  min-h-[750px] text-[#4CC2F4] text-[20px] font-semibold bg-white \"\r\n            }\r\n          >\r\n            {/* A and C */}\r\n            <div className=\"grid grid-rows-6 max-h-[750px]\">\r\n              {/* section 1 */}\r\n              <div\r\n                className={\r\n                  focusThoughtDiaryLetter === \"a\" ||\r\n                  focusThoughtDiaryLetter === \"a_b\"\r\n                    ? \"border-b-4 border-[#86A1AC] bg-white text-[#4CC2F4] row-span-2\"\r\n                    : \"border-b-4 border-[#86A1AC] row-span-2\"\r\n                }\r\n              >\r\n                <div className=\" p-4 break-words \">\r\n                  <label className=\"text-[20px] \">A) Activating Event</label>\r\n                  <div className=\"flex flex-col leading-none  text-[32px] text-center \">\r\n                    <label className=\"text-[14px] font-normal text-justify text-blue-900 w-full  py-2 px-2 space-y-2\">\r\n                      (What happened? What did I do? What did others do? What\r\n                      idea occurred to me? What’s stressing me out?)\r\n                    </label>\r\n                    <label className=\"text-[14px] text-blue-900  font-bold w-full\">\r\n                      This may be either: an actual event or situation, a\r\n                      thought, mental picture or recollection.\r\n                    </label>\r\n\r\n                    <label\r\n                      className=\"max-w-[300px] max-h-[250px]\r\n                    text-[14px]\"\r\n                    >\r\n                      {/* Crying out loud last week */}\r\n                      {getAdverseStep3}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* section 2 */}\r\n              <div\r\n                className={\r\n                  focusThoughtDiaryLetter === \"c\" ||\r\n                  focusThoughtDiaryLetter === \"b_c\"\r\n                    ? \" bg-white p-4 text-[#4CC2F4] row-span-4\"\r\n                    : \" p-4 row-span-4\"\r\n                }\r\n              >\r\n                <label className=\"text-[20px] \">C) Consequences</label>\r\n                <div className=\" text-center break-words max-w-[300px]\">\r\n                  {/* Hot emotion section */}\r\n                  <label className=\"flex flex-col leading-none\">\r\n                    <label>\r\n                      <ol className=\"text-[14px] text-justify text-blue-900 font-normal  py-2 px-2 space-y-2\">\r\n                        <li>1. Write down words describing how you feel.</li>\r\n                        <li>\r\n                          2. Underline the one that is most associated with the\r\n                          activating event.\r\n                        </li>\r\n                        <li>\r\n                          3. Rate the intensity of that feeling (0 to 100).\r\n                        </li>\r\n                      </ol>\r\n                      <label className=\"text-[14px] text-blue-900  font-bold\">\r\n                        hot emotion: rated {getHotEmotionRate}/10\r\n                      </label>\r\n                    </label>\r\n                    {/* <label className=\"text-[14px] text-blue-900  font-bold\">\r\n                    hot emotion: rated {getHotEmotionRate}/10\r\n                  </label> */}\r\n                    <label className=\"\">\r\n                      {getHotEmotionCAnswer != null ||\r\n                      (getHotEmotionCAnswer != undefined &&\r\n                        getAdverseStep3 != null) ||\r\n                      getAdverseStep3 != undefined\r\n                        ? getHotEmotionCAnswer.map((item, i) => {\r\n                            // console.log(firstHit === -1, firstHit);\r\n                            if (item.select && firstHit === -1) {\r\n                              firstHit = i;\r\n                            }\r\n                            return (\r\n                              <>\r\n                                {item.select && i != firstHit ? (\r\n                                  <span className=\"text-[50px] leading-[0px]\">\r\n                                    ,\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                                {_handleMoodResultGetHotEmotionCAnswer(item, i)}\r\n                              </>\r\n                            );\r\n                          })\r\n                        : \"\"}\r\n                      <span className=\"text-[50px] leading-[0px]\">.</span>\r\n                      {/* {count === 1 ? (\r\n                      <span className=\"text-[50px] leading-[0px]\">.</span>\r\n                    ) : (\r\n                      \"\"\r\n                    )} */}\r\n\r\n                      {/* Sad<span className=\"text-[50px] leading-[0px]\">,</span> Low\r\n                    feeling<span className=\"text-[50px] leading-[0px]\">.</span> */}\r\n                    </label>\r\n                  </label>\r\n\r\n                  {/* Other emotions section */}\r\n                  <label className=\"pt-10 flex flex-col leading-none\">\r\n                    <label>\r\n                      <ol className=\"text-[14px] text-justify text-blue-900 font-normal  py-2 px-2 space-y-2\">\r\n                        <li>\r\n                          4. Jot down any physical sensations you experienced or\r\n                          actions carried out.\r\n                        </li>\r\n                      </ol>\r\n                      <label className=\"text-[14px] text-blue-900  font-bold\">\r\n                        other emotions you feel\r\n                      </label>\r\n                    </label>\r\n\r\n                    <label className=\"\">\r\n                      {getOtherEmotionAll != null ||\r\n                      getOtherEmotionAll != undefined\r\n                        ? getOtherEmotionAll.map((item, i) => {\r\n                            // console.log(firstHit === -1, firstHit);\r\n                            // if (item.select && firstHitOther === -1) {\r\n                            //   firstHitOther = i;\r\n                            // }\r\n                            return (\r\n                              <>\r\n                                {/* .select && i != firstHitOther */}\r\n                                {i != 0 ? (\r\n                                  <span className=\"text-[50px] leading-[0px]\">\r\n                                    ,\r\n                                  </span>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                                {_handleMoodResultGetOtherEmotionAll(item, i)}\r\n                              </>\r\n                            );\r\n                          })\r\n                        : \"\"}\r\n                      <span className=\"text-[50px] leading-[0px]\">.</span>\r\n                      {/* Heavy<span className=\"text-[50px] leading-[0px]\">,</span>{\" \"}\r\n                    Low Energy\r\n                    <span className=\"text-[50px] leading-[0px]\">,</span> Tired\r\n                    <span className=\"text-[50px] leading-[0px]\">.</span> */}\r\n                    </label>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* B */}\r\n            <div className=\"border-l-4 border-[#86A1AC] grid grid-rows-6 \">\r\n              {/* section 1 */}\r\n              <div\r\n                className={\r\n                  focusThoughtDiaryLetter === \"b\" ||\r\n                  focusThoughtDiaryLetter === \"b_c\" ||\r\n                  focusThoughtDiaryLetter === \"a_b\"\r\n                    ? \"pb-4 bg-white p-4 text-[#4CC2F4] row-span-4 border-b-4 border-[#86A1AC] max-h-[750px]\"\r\n                    : \"pb-4 p-4 row-span-4 border-b-4 border-[#86A1AC] max-h-[750px]\"\r\n                }\r\n              >\r\n                <label className=\"text-[20px] \">B) Beliefs</label>\r\n                <div className=\"text-center break-words max-w-[290px]\">\r\n                  {/* hot thought */}\r\n                  <label className=\"flex flex-col leading-none\">\r\n                    <label>\r\n                      <ol className=\"text-[14px] text-justify text-blue-900 font-normal py-2 px-2 space-y-2\">\r\n                        <li>\r\n                          1. List all statements that link A to C. Ask yourself\r\n                          \"What was I thinking?\" \"What was I saying to myself?\"\r\n                          \"What was going through my head at the time?\".\r\n                        </li>\r\n                        <li>\r\n                          2. Find the most distressing (hot) thought and\r\n                          underline it.\r\n                        </li>\r\n                        <li>\r\n                          3. Rate how much you believe this thought between (0\r\n                          to 100).\r\n                        </li>\r\n                      </ol>\r\n                      <label className=\"text-[14px] text-blue-900  font-bold\">\r\n                        the hot thought: rated {getHotThoughtRate}/100\r\n                      </label>\r\n                    </label>\r\n\r\n                    <label className=\"\">\r\n                      {getHotThoughtB[0]}\r\n                      {/* I'm always going to feel depressed\r\n                    <span className=\"text-[50px] leading-[0px]\">.</span> */}\r\n                    </label>\r\n                  </label>\r\n\r\n                  {/* other thoughts */}\r\n                  <label className=\"flex flex-col leading-none pt-10\">\r\n                    <label className=\"text-[14px] text-blue-900  font-bold\">\r\n                      other thoughts\r\n                    </label>\r\n                    {/* other thoughts instances */}\r\n                    <div className=\"leading-normal flex flex-col w-full\">\r\n                      <label className=\"\">\r\n                        {/* {_handleShowList(getOtherThoughtB)} */}\r\n                        {getOtherThoughtB != null ||\r\n                        getOtherThoughtB != undefined\r\n                          ? getOtherThoughtB.map((item, i) => {\r\n                              // console.log(firstHit === -1, firstHit);\r\n                              // if (item.select && firstHitOther === -1) {\r\n                              //   firstHitOther = i;\r\n                              // }\r\n                              return (\r\n                                <>\r\n                                  {/* .select && i != firstHitOther */}\r\n                                  {i != 0 ? (\r\n                                    <span className=\"text-[50px] leading-[0px]\">\r\n                                      ,\r\n                                    </span>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                  {item}\r\n                                </>\r\n                              );\r\n                            })\r\n                          : \"\"}\r\n                        <span className=\"text-[50px] leading-[0px]\">.</span>\r\n                      </label>\r\n                    </div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              {/* section 2 */}\r\n              <div\r\n                className={\r\n                  focusThoughtDiaryLetter === \"b_uts\"\r\n                    ? \" text-center break-words max-w-[330px]  pt-2 pb-4 px-4 bg-white p-4 text-[#4CC2F4] row-span-2\"\r\n                    : \" text-center break-words max-w-[330px]  pt-2 pb-4 px-4 row-span-2\"\r\n                }\r\n              >\r\n                {/* The hot thought Unhelpful Thinking Styles */}\r\n                <label className=\"flex flex-col leading-none\">\r\n                  <label className=\"text-[14px] text-blue-900  font-bold\">\r\n                    the hot thought unhelpful thinking style\r\n                  </label>\r\n                  <label className=\"max-h-[250px]\">\r\n                    {/* Jumping to Conclusions\r\n                    <span className=\"text-[50px] leading-[0px]\">.</span> */}\r\n                    {getUTSContainer.length != 0 ? (\r\n                      <>\r\n                        {getHotThoughtB.length != 0 ? (\r\n                          <>\r\n                            {getUTSContainer.map((item, i) => {\r\n                              if (getHotThoughtB[0] === item.thought) {\r\n                                return (\r\n                                  <>\r\n                                    <span\r\n                                      onMouseEnter={() => {\r\n                                        setThought(item.thought);\r\n                                        // console.log(item.thought, \"sample\");\r\n                                        onMouseEnter();\r\n                                        // <div>hello?</div>;\r\n                                      }}\r\n                                      onMouseLeave={() => {\r\n                                        setThought(\"\");\r\n\r\n                                        onMouseLeave();\r\n                                      }}\r\n                                      className=\"cursor-pointer\"\r\n                                    >\r\n                                      {item.title}\r\n                                    </span>\r\n\r\n                                    {/* <span className=\" leading-[0px] px-2\">\r\n                                    {\">\"}\r\n                                  </span>\r\n                                  {item.thought} */}\r\n                                  </>\r\n                                );\r\n                              }\r\n                            })}\r\n                            {/* {getHotThoughtB[0] === getUTSContainer[0].title ? (\r\n                            <>\r\n                              {getUTSContainer[0].title}\r\n                              <span className=\" leading-[0px] px-2\">{\">\"}</span>\r\n                              {getUTSContainer[0].thought}\r\n                            </>\r\n                          ) : (\r\n                            \"\"\r\n                          )} */}\r\n                          </>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                    {isHovering && HoverText()}\r\n                    <span className=\"text-[50px] leading-[0px]\">.</span>\r\n                  </label>\r\n                </label>\r\n\r\n                {/* Other Unhelpful Thinking Styles  */}\r\n                <label className=\"flex flex-col leading-none pt-10 max-w-[330px]\">\r\n                  <label className=\"text-[14px] text-blue-900  font-bold\">\r\n                    other mentioned unhelpful thinking styles\r\n                  </label>\r\n                  {/* other thoughts instances */}\r\n                  <div className=\"leading-none flex flex-col\">\r\n                    <label className=\"max-h-[250px]\">\r\n                      {getUTSContainer.length != 0\r\n                        ? getUTSContainer.map((item, i) => {\r\n                            // console.log(getUTSContainer)\r\n                            return (\r\n                              <>\r\n                                {getHotThoughtB[0] != item.thought ? (\r\n                                  <>\r\n                                    {item.title}\r\n                                    <span className=\" leading-[0px] px-2\">\r\n                                      {\">\"}\r\n                                    </span>\r\n                                    {item.thought}\r\n                                    {i != getUTSContainer.length - 1 ? (\r\n                                      <>\r\n                                        <span className=\"text-[50px] leading-[0px]\">\r\n                                          ,\r\n                                        </span>\r\n                                      </>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                  </>\r\n                                ) : (\r\n                                  \"\"\r\n                                )}\r\n                              </>\r\n                            );\r\n                          })\r\n                        : \"\"}\r\n                      <span className=\"text-[50px] leading-[0px]\">.</span>\r\n                    </label>\r\n                  </div>\r\n                </label>\r\n              </div>\r\n            </div>\r\n            {/* D */}\r\n            <div\r\n              className={\r\n                focusThoughtDiaryLetter === \"d\"\r\n                  ? \" bg-white border-l-4 text-[#4CC2F4] border-[#86A1AC] grid grid-rows-6 p-4\"\r\n                  : \"border-l-4 border-[#86A1AC] grid grid-rows-6 p-4\"\r\n              }\r\n            >\r\n              {/* section 1 */}\r\n              <div className=\"  break-words max-w-[330px] row-span-3 \">\r\n                {/* Check the evidence */}\r\n                <label className=\"text-[14px] text-blue-900  font-bold text-left\">\r\n                  1. Check the evidence\r\n                </label>\r\n\r\n                <div className=\"text-center flex flex-col justify-between h-full \">\r\n                  {/* for evidence */}\r\n                  <div className=\"h-[100px]\">\r\n                    <label className=\"flex flex-col leading-none \">\r\n                      <label className=\"underline text-[14px]  text-blue-900 font-normal\">\r\n                        Factual evidence FOR my hot thought:\r\n                      </label>\r\n\r\n                      <div className=\"leading-none flex flex-col\">\r\n                        <label className=\"\">\r\n                          {/* {_handleShowList(getOtherThoughtB)} */}\r\n                          {getForEvidenceD.length != 0\r\n                            ? getForEvidenceD.map((item, i) => {\r\n                                return (\r\n                                  <>\r\n                                    {/* .select && i != firstHitOther */}\r\n                                    {i != 0 ? (\r\n                                      <span className=\"text-[50px] leading-[0px]\">\r\n                                        ,\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                    {item}\r\n                                  </>\r\n                                );\r\n                              })\r\n                            : \"\"}\r\n                          <span className=\"text-[50px] leading-[0px]\">.</span>\r\n                        </label>\r\n                      </div>\r\n                    </label>\r\n                  </div>\r\n                  {/* against evidence */}\r\n                  <div className=\"h-[300px]\">\r\n                    <label className=\"flex flex-col leading-none \">\r\n                      <label className=\"underline text-[14px]  text-blue-900 font-normal\">\r\n                        Factual evidence AGAINST my hot thought:\r\n                      </label>\r\n\r\n                      <div className=\"leading-none flex flex-col\">\r\n                        <label className=\"\">\r\n                          {/* {_handleShowList(getOtherThoughtB)} */}\r\n                          {getAgainstEvidenceD.length != 0\r\n                            ? getAgainstEvidenceD.map((item, i) => {\r\n                                return (\r\n                                  <>\r\n                                    {/* .select && i != firstHitOther */}\r\n                                    {i != 0 ? (\r\n                                      <span className=\"text-[50px] leading-[0px]\">\r\n                                        ,\r\n                                      </span>\r\n                                    ) : (\r\n                                      \"\"\r\n                                    )}\r\n                                    {item}\r\n                                  </>\r\n                                );\r\n                              })\r\n                            : \"\"}\r\n                          <span className=\"text-[50px] leading-[0px]\">.</span>\r\n                        </label>\r\n                      </div>\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"h-[0px]\"></div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* section 2 */}\r\n              <div className=\"text-left row-span-1\">\r\n                {/* Challenge unhelpful thinking styles */}\r\n                <label className=\"text-[14px] text-blue-900  font-bold\">\r\n                  2. Challenge unhelpful thinking styles\r\n                </label>\r\n                <label className=\"flex flex-col leading-none\">\r\n                  <label className=\"text-[14px] text-justify text-blue-900 font-normal italic pl-4\">\r\n                    Answer the disputation questions that apply to the unhelpful\r\n                    thinking styles you've picked\r\n                  </label>\r\n\r\n                  <div className=\"leading-none flex flex-col\"></div>\r\n                </label>\r\n              </div>\r\n              {/* section 3 */}\r\n              <div className=\" text-center break-words max-w-[330px] row-span-2\">\r\n                {/* Change my perspective */}\r\n                <div className=\"text-left\">\r\n                  <label className=\"text-[14px] text-blue-900  font-bold\">\r\n                    3. Change my perspective\r\n                  </label>\r\n\r\n                  <label className=\"flex flex-col leading-none\">\r\n                    <label className=\"text-[14px] text-justify text-blue-900 font-normal italic pl-4\">\r\n                      What are other ways of viewing the situation? What would\r\n                      you say to someone you care about? To change how you act,\r\n                      how would you need to think differently?\r\n                    </label>\r\n\r\n                    <div className=\"leading-none flex flex-col\"></div>\r\n                  </label>\r\n                </div>\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"border-l-4 border-[#86A1AC] p-4\">\r\n              <label className=\"text-[20px] text-[#4CC2F4]\">\r\n                E) End Result\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(Chatbot);\r\n","import React, { useState } from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { ThoughtDiaryContext } from \"../Context/ThoughtDiaryContext\";\r\nimport { GetAdverseAnswerContext } from \"../Context/GetAdverseAnswerContext\";\r\nimport { ShowMoodsContext } from \"../Context/ShowMoodsContext\";\r\nimport { GetHotEmotionCAnswerContext } from \"../Context/GetHotEmotionCAnswerContext\";\r\nimport { GetOtherEmotionCAnswerContext } from \"../Context/GetOtherEmotionCAnswerContext\";\r\nimport { ShowChatBox } from \"../Context/ShowChatBox\";\r\nimport { ThoughtDiaryFocusContext } from \"../Context/ThoughtDiaryFocusContext\";\r\nimport { MaxInputContext } from \"../Context/MaxInputContext\";\r\nimport { GetOtherEmotionAllContext } from \"../Context/GetOtherEmotionAllContext\";\r\nimport { HotEmotionRateContext } from \"../Context/HotEmotionRateContext\";\r\nimport { GetHotThoughtBContext } from \"../Context/GetHotThoughtBContext\";\r\nimport { GetOtherThoughtBContext } from \"../Context/GetOtherThoughtBContext\";\r\nimport { ShowUTSContext } from \"../Context/ShowUTSContext\";\r\nimport { GetUTSContext } from \"../Context/GetUTSContext\";\r\nimport { GetUTSContainerContext } from \"../Context/GetUTSContainerContext\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { HotThoughtRateContext } from \"../Context/HotThoughtRateContext\";\r\nimport { GetForEvidenceDContext } from \"../Context/GetForEvidenceDContext\";\r\nimport { GetAgainstEvidenceDContext } from \"../Context/GetAgainstEvidenceDContext\";\r\nimport { GetLocationContext } from \"../Context/GetLocationContext\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Landing from \"./pages/Landing\";\r\n\r\nimport About from \"./pages/About\";\r\nimport Shop from \"./shop/Shop\";\r\nimport Chatbot from \"./chatbot/Chatbot\";\r\n// import PetCard from \"./PetCard\";\r\nimport Basket from \"./Basket\";\r\nimport UTS from \"./UTS\";\r\n\r\nfunction App() {\r\n  const [showThoughtDiaryTool, setShowThoughtDiaryTool] = useState(false);\r\n  const [getAdverseStep3, setGetAdverseStep3] = useState(null);\r\n  const [getHotEmotionCAnswer, setGetHotEmotionCAnswer] = useState(null);\r\n  const [getOtherEmotionCAnswer, setGetOtherEmotionCAnswer] = useState(null);\r\n  const [showChatBox, setShowChatBox] = useState(false);\r\n  const [showMoods, setShowMoods] = useState(false);\r\n  const [focusThoughtDiaryLetter, setFocusThoughtDiaryLetter] = useState(null);\r\n  const [maxInput, setMaxInput] = useState(0);\r\n  const [getOtherEmotionAll, setGetOtherEmotionAll] = useState([]);\r\n  const [getHotEmotionRate, setGetHotEmotionRate] = useState(0);\r\n  const [getHotThoughtB, setGetHotThoughtB] = useState([]);\r\n  const [getOtherThoughtB, setGetOtherThoughtB] = useState([]);\r\n  const [showUTS, setShowUTS] = useState(false);\r\n  const [getUTS, setGetUTS] = useState();\r\n  const [getUTSContainer, setGetUTSCointainer] = useState([]);\r\n  const [getHotThoughtRate, setGetHotThoughtRate] = useState(0);\r\n  const [getForEvidenceD, setGetForEvidenceD] = useState([]);\r\n  const [getAgainstEvidenceD, setGetAgainstEvidenceD] = useState([]);\r\n  const [getLocation, setGetLocation] = useState(false);\r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <ShowMoodsContext.Provider\r\n        value={{\r\n          showMoods,\r\n          setShowMoods,\r\n        }}\r\n      >\r\n        <div\r\n          className={\r\n            showMoods\r\n              ? \"flex justify-center bg-[#3D829F] bg-opacity-[0.75]  w-full h-screen absolute\"\r\n              : \"flex justify-center w-full h-screen\"\r\n          }\r\n        >\r\n          <BrowserRouter>\r\n            <div className=\" w-full h-full \">\r\n              <Header />\r\n\r\n              <ThoughtDiaryContext.Provider\r\n                value={{\r\n                  showThoughtDiaryTool,\r\n                  setShowThoughtDiaryTool,\r\n                }}\r\n              >\r\n                <GetAdverseAnswerContext.Provider\r\n                  value={{\r\n                    getAdverseStep3,\r\n                    setGetAdverseStep3,\r\n                  }}\r\n                >\r\n                  <GetHotEmotionCAnswerContext.Provider\r\n                    value={{\r\n                      getHotEmotionCAnswer,\r\n                      setGetHotEmotionCAnswer,\r\n                    }}\r\n                  >\r\n                    <GetOtherEmotionCAnswerContext.Provider\r\n                      value={{\r\n                        getOtherEmotionCAnswer,\r\n                        setGetOtherEmotionCAnswer,\r\n                      }}\r\n                    >\r\n                      <ShowChatBox.Provider\r\n                        value={{\r\n                          showChatBox,\r\n                          setShowChatBox,\r\n                        }}\r\n                      >\r\n                        <ThoughtDiaryFocusContext.Provider\r\n                          value={{\r\n                            focusThoughtDiaryLetter,\r\n                            setFocusThoughtDiaryLetter,\r\n                          }}\r\n                        >\r\n                          <MaxInputContext.Provider\r\n                            value={{\r\n                              maxInput,\r\n                              setMaxInput,\r\n                            }}\r\n                          >\r\n                            <GetOtherEmotionAllContext.Provider\r\n                              value={{\r\n                                getOtherEmotionAll,\r\n                                setGetOtherEmotionAll,\r\n                              }}\r\n                            >\r\n                              <HotEmotionRateContext.Provider\r\n                                value={{\r\n                                  getHotEmotionRate,\r\n                                  setGetHotEmotionRate,\r\n                                }}\r\n                              >\r\n                                <GetOtherThoughtBContext.Provider\r\n                                  value={{\r\n                                    getOtherThoughtB,\r\n                                    setGetOtherThoughtB,\r\n                                  }}\r\n                                >\r\n                                  <GetHotThoughtBContext.Provider\r\n                                    value={{\r\n                                      getHotThoughtB,\r\n                                      setGetHotThoughtB,\r\n                                    }}\r\n                                  >\r\n                                    <ShowUTSContext.Provider\r\n                                      value={{\r\n                                        showUTS,\r\n                                        setShowUTS,\r\n                                      }}\r\n                                    >\r\n                                      <GetUTSContext.Provider\r\n                                        value={{\r\n                                          getUTS,\r\n                                          setGetUTS,\r\n                                        }}\r\n                                      >\r\n                                        <GetUTSContainerContext.Provider\r\n                                          value={{\r\n                                            getUTSContainer,\r\n                                            setGetUTSCointainer,\r\n                                          }}\r\n                                        >\r\n                                          <HotThoughtRateContext.Provider\r\n                                            value={{\r\n                                              getHotThoughtRate,\r\n                                              setGetHotThoughtRate,\r\n                                            }}\r\n                                          >\r\n                                            <GetForEvidenceDContext.Provider\r\n                                              value={{\r\n                                                getForEvidenceD,\r\n                                                setGetForEvidenceD,\r\n                                              }}\r\n                                            >\r\n                                              <GetAgainstEvidenceDContext.Provider\r\n                                                value={{\r\n                                                  getAgainstEvidenceD,\r\n                                                  setGetAgainstEvidenceD,\r\n                                                }}\r\n                                              >\r\n                                                <GetLocationContext.Provider\r\n                                                  value={{\r\n                                                    getLocation,\r\n                                                    setGetLocation,\r\n                                                  }}\r\n                                                >\r\n                                                  {/* contexts above */}\r\n                                                  <Route\r\n                                                    exact\r\n                                                    path=\"/\"\r\n                                                    component={Landing}\r\n                                                  />\r\n\r\n                                                  <Chatbot />\r\n                                                </GetLocationContext.Provider>\r\n                                              </GetAgainstEvidenceDContext.Provider>\r\n                                            </GetForEvidenceDContext.Provider>\r\n                                          </HotThoughtRateContext.Provider>\r\n                                        </GetUTSContainerContext.Provider>\r\n                                      </GetUTSContext.Provider>\r\n                                    </ShowUTSContext.Provider>\r\n                                  </GetHotThoughtBContext.Provider>\r\n                                </GetOtherThoughtBContext.Provider>\r\n                              </HotEmotionRateContext.Provider>\r\n                            </GetOtherEmotionAllContext.Provider>\r\n                          </MaxInputContext.Provider>\r\n                        </ThoughtDiaryFocusContext.Provider>\r\n                      </ShowChatBox.Provider>\r\n                    </GetOtherEmotionCAnswerContext.Provider>\r\n                  </GetHotEmotionCAnswerContext.Provider>\r\n                </GetAdverseAnswerContext.Provider>\r\n              </ThoughtDiaryContext.Provider>\r\n\r\n              <Footer />\r\n            </div>\r\n          </BrowserRouter>\r\n        </div>\r\n      </ShowMoodsContext.Provider>\r\n    </DndProvider>\r\n  );\r\n}\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nregisterServiceWorker();\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))ss\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}